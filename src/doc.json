{
  "openapi": "3.0.0",

  
  "tags": [
    {
      "name": "Clientes",
      "description": "Adiciona um novo cliente a base de clientes, um cliente pode ser usado para criar faturas, recorrências ou parcelmentos"
    },
    {
      "name": "Assinaturas",
      "description": "A recorrência é uma ótima maneira de fidelizar clientes e ter mais previsibilidade de caixa. Configurar esse tipo de cobrança do jeito que o seu negócio precisa é bem simples via API. Esse processo consiste em criar planos, nos quais são definidos os detalhes dessa cobrança, como periodicidade e produtos ou serviços atrelados a ele, e depois em criação de assinatura, em que você cria uma cobrança para os clientes, seguindo as especificações do plano."
    },
    {
      "name": "Faturas",
      "description": " teste faturas "
    },
    {
      "name": "Recebíveis",
      "description": "teste Recebíveis"
    },
    {
      "name": "Links de Pagamento",
      "description": "teste Links de Pagamento"
    },
    {
      "name": "Produtos",
      "description": "teste Produtos"
    },
    {
      "name": "Carteira",
      "description": "teste carteira"
    }
  ],
 
  "paths": {
    "/v1/clients": {
      "post": {
        "operationId": "ClientsController_createClient",
        "summary": "Criar cliente",
        "description": "Adiciona um novo cliente a base de clientes, um cliente pode ser usado para criar faturas, recorrências ou parcelmentos",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "pf",
                      "pj"
                    ],
                    "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Nome completo do cliente"
                  },
                  "treatmentPronoun": {
                    "type": "string",
                    "enum": [
                      "you",
                      "mr",
                      "lady"
                    ],
                    "description": "Saudação preferida<br/><br/>\n      you = Neutro<br/>\n      mr = Senhor<br/>\n      lady = Senhora"
                  },
                  "cpfCnpj": {
                    "type": "string",
                    "minLength": 11,
                    "maxLength": 14,
                    "description": "CPF ou CNPJ do cliente, somente números"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255,
                    "description": "Email do cliente"
                  },
                  "cellphone": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 11,
                    "description": "Número do celular do cliente, somente números, pode ser informado com ou sem digito 9"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "street": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Endereço do cliente rua/logradouro"
                      },
                      "zone": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Bairro/localidade"
                      },
                      "city": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Cidade"
                      },
                      "state": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "description": "Sigla do estado"
                      },
                      "number": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "description": "Número"
                      },
                      "complement": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "description": "Complemento"
                      },
                      "zip": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 8,
                        "description": "Cep/código postal, apenas números"
                      }
                    },
                    "required": [
                      "street",
                      "zone",
                      "city",
                      "state",
                      "zip"
                    ],
                    "description": "Devese-se informar o endereço do cliente"
                  }
                },
                "required": [
                  "type",
                  "name",
                  "cpfCnpj",
                  "email",
                  "cellphone"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Client",
                  "required": [
                    "address",
                    "cellphone",
                    "email",
                    "cpfCnpj",
                    "type",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "zip": {
                          "type": "string"
                        },
                        "complement": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "zone": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        }
                      }
                    },
                    "cellphone": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "cpfCnpj": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "pf",
                        "pj"
                      ]
                    },
                    "treatmentPronoun": {
                      "type": "string",
                      "enum": [
                        "you",
                        "mr",
                        "lady"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Cliente já cadastrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Cliente já cadastrado"
                    },
                    "error": {
                      "type": "string",
                      "example": "Conflict"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.create"
            ]
          }
        ]
      },
      "get": {
        "operationId": "ClientsController_listClients",
        "summary": "Listar clientes",
        "description": "Lista clientes do beneficiário, aceita filtros, ordenação e paginação.<br/><br/>\n    Use \"|\" como separador caso deseje passar vários valores nos campos: **clientTypes**",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Nome, CPF ou E-mail do cliente que deseja pesquisar"
          },
          {
            "name": "clientTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pf",
                "pj"
              ]
            },
            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Data Inicial"
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Data Final"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Página atual"
          },
          {
            "name": "perPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Quantidade de itens por página"
          },
          {
            "name": "sortField",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Campo de classificação"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              ]
            },
            "description": "Oredenar resposta"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "pf",
                              "pj"
                            ]
                          },
                          "cpfCnpj": {
                            "type": "string"
                          },
                          "cellphone": {
                            "type": "string"
                          },
                          "treatmentPronoun": {
                            "type": "string",
                            "enum": [
                              "you",
                              "mr",
                              "lady"
                            ]
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.get"
            ]
          }
        ]
      }
    },
    "/v1/clients/import": {
      "post": {
        "operationId": "ClientsController_importClients",
        "summary": "Importar clientes",
        "description": "Recebe um csv e importa para base de clientes, [modelo .csv](https://storage.googleapis.com/lypag-static/modelo-importacao-clientes.csv)<br/><br/>\n    *Esta requisicão poderá ser movida para segundo plano caso os servidores estejam sob alta demanda, uma resposta 202 será enviada caso a requisicão seja movida para segundo plano e uma notficação será enviada ao finalizar a importação.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Arquivo com os clientes que deseja importar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "clientId",
                      "subscriptionId"
                    ],
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "example": "6101ac11f99c2556e2877e4f"
                      },
                      "subscriptionId": {
                        "type": "string",
                        "example": "6101aeae1166cc57481c0025"
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Processando",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "import_started"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Arquivo inválido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Arquivo inválido",
                        "Erro ao processar a linha: 1"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.import"
            ]
          }
        ]
      }
    },
    "/v1/clients/autocomplete": {
      "get": {
        "operationId": "ClientsController_autocompleteClients",
        "summary": "Autocomplete clientes",
        "description": "Retorna dados do cliente com base em uma pesquisa",
        "parameters": [
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Nome do cliente a ser pesquisado"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "pf",
                          "pj"
                        ]
                      },
                      "treatmentPronoun": {
                        "type": "string",
                        "enum": [
                          "you",
                          "mr",
                          "lady"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.get"
            ]
          }
        ]
      }
    },
    "/v1/clients/{id}": {
      "get": {
        "operationId": "ClientsController_getClient",
        "summary": "Detalhes do cliente",
        "description": "Retorna detalhamento de um cliente",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Identificador unico ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Client",
                  "required": [
                    "address",
                    "cellphone",
                    "email",
                    "cpfCnpj",
                    "type",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "zip": {
                          "type": "string"
                        },
                        "complement": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "zone": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        }
                      }
                    },
                    "cellphone": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "cpfCnpj": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "pf",
                        "pj"
                      ]
                    },
                    "treatmentPronoun": {
                      "type": "string",
                      "enum": [
                        "you",
                        "mr",
                        "lady"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Cliente inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.get"
            ]
          }
        ]
      },
      "put": {
        "operationId": "ClientsController_updateClient",
        "summary": "Atualiza cliente",
        "description": "Atualiza dados de um cliente",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "pf",
                      "pj"
                    ]
                  },
                  
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Nome do cliente"
                  },
                  "treatmentPronoun": {
                    "type": "string",
                    "enum": [
                      "you",
                      "mr",
                      "lady"
                    ],
                    "description": "Como gostaria de ser tratado você, senhor, senhora"
                  },
                  "cpfCnpj": {
                    "anyOf": [
                      {
                        "type": "string",
                        "x-required": true
                      }
                    ],
                    "description": "CPF ou CNPJ do cliente "
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255,
                    "description": "E-mail do cliente "
                  },
                  "cellphone": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 11,
                    "description": "Telefone do cliente "
                  },
                  "address": {
                    "type": "object",
                    "description": "Endereço do cliente",
                    "properties": {
                      "street": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Rua/logradouro"
                      },
                      "zone": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Bairro/localidade"
                      },
                      "city": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Cidade"
                      },
                      "state": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "description": "Sigla do estado"
                      },
                      "number": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "description": "Número"
                      },
                      "complement": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "description": "Complemento"
                      },
                      "zip": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 8,
                        "description": "Cep/código postal, apenas números"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Client",
                  "required": [
                    "address",
                    "cellphone",
                    "email",
                    "cpfCnpj",
                    "type",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "zip": {
                          "type": "string"
                        },
                        "complement": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "zone": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        }
                      }
                    },
                    "cellphone": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "cpfCnpj": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "pf",
                        "pj"
                      ]
                    },
                    "treatmentPronoun": {
                      "type": "string",
                      "enum": [
                        "you",
                        "mr",
                        "lady"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Cliente inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.update"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "ClientsController_deleteClient",
        "summary": "Remove cliente",
        "description": "Remove um cliente",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Identificador unico do cliente ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Client",
                  "required": [
                    "address",
                    "cellphone",
                    "email",
                    "cpfCnpj",
                    "type",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "zip": {
                          "type": "string"
                        },
                        "complement": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "zone": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        }
                      }
                    },
                    "cellphone": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "cpfCnpj": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "pf",
                        "pj"
                      ]
                    },
                    "treatmentPronoun": {
                      "type": "string",
                      "enum": [
                        "you",
                        "mr",
                        "lady"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Cliente inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.delete"
            ]
          }
        ]
      }
    },
    "/v1/subscriptions": {
      "post": {
        "operationId": "SubscriptionsController_createSubscription",
        "summary": "Criar Assinatura",
        "description": "Cria uma assinatura para um usuário.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_clientId": {
                        "type": "string",
                        "description" : "Identificador unico ID"
                      },
                      "items": {
                        "description": "Informações do produto",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "Nome do Produto"
                            },
                            "quantity": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Quantidade"
                            },
                            "value": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Valor unitário do produto"
                            }
                          },
                          "required": [
                            "name",
                            "quantity",
                            "value"
                          ]
                        },
                        "minItems": 1
                      },
                      "recurrence": {
                        "description": "Repassar forma de cobrança, se será mensal ou anual, próxima fatura a ser gerada, o dia a ser gerado e a quantidade de dias para o vencimento.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "monthly"
                            ],
                            "description": "Tipo de Cobrança mensal ou anual"

                          },
                          "day": {
                            "type": "number",
                            "format": "float",
                            "minimum": 1,
                            "maximum": 28,
                            "description": "Dia que sera gerada a próxima fatura"
                          },
                          "dueDateDays": {
                            "type": "number",
                            "format": "float",
                            "minimum": 1,
                            "maximum": 15,
                            "description": "Dia de vencimento das faturas geradas"
                          },
                          "nextAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Data da próxima fatura a ser gerada"
                  
                          }
                        },
                        "required": [
                          "type",
                          "day",
                          "dueDateDays"
                        ]
                      },
                      "duration": {
                        "description": "Duração da recorrência",
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string",
                            "enum": [
                              "months",
                              "years",
                              "infinity"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "integer",
                                "minimum": 1,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "unit"
                        ]
                      },
                      "paymentMethods": {
                        "description": "Métodos de pagamento,cartão de crédito, boleto, pix. Repassar no cartão de créditos o parâmetro maxParcels",
                        "type": "object",
                        "properties": {
                          "pix": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "dueDateDays": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "creditCard": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "maxParcels": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "interestFreeUntil": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "monthlyInterest": {
                                "type": "integer",
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          }
                        },
                        "required": [
                          "pix",
                          "boleto",
                          "creditCard"
                        ]
                      },
                      "notifications": {
                        "description": "Habilitar ou desabilitar notificações",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "True para habilitar False para desabilitar" 
                          },
                          "channels": {
                            "description": "Canais de notificação ",
                                "type": "object",
                                "properties": {
                                  "sms": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de SMS"
                                  },
                                  "email": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de e-mail"
                                  },
                                  "whatsApp": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de whatsApp"
                                  }
                                },
                                "required": [
                                  "sms",
                                  "email",
                                  "whatsApp"
                                ],
                                "x-required": true
                          },
                          "types": {
                            "description": "Configurações de disparo da notificação",
                                "type": "object",
                                "properties": {
                                  "invoiceCreate": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação quando a fatura for criada"
                                  },
                                  "daysBeforeExpiration3": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação 3 dias antes da fatura vencer"
                                  },
                                  "expirationDay": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação no dia de expiração"
                                  },
                                  "invoicePaid": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação quando a fatura for paga "
                                
                                  }
                                },
                                "required": [
                                  "invoiceCreate",
                                  "daysBeforeExpiration3",
                                  "expirationDay",
                                  "invoicePaid"
                                ],
                                "x-required": true
                              }

                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "split": {
                        "description": "Para os estabelecimentos a fazer o split (tem que ser solicitado previamente no site)",
                        "type": "object",
                        "properties": {
                          "taxationMode": {
                            "type": "string",
                            "description": "modo de tributação",
                            "enum": [
                              "onlyPrimary"
                            ]
                          },
                          "recipients": {
                            "description": "Dados do destinatários",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpfCnpj": {
                                  "type": "string",
                                  "description": "CPF/CNPJ do destinatários"
                                },
                                "commission": {
                                  "description": "Configurar a comissão",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "fixedValue",
                                        "percentage"
                                      ],
                                      "description": "Definir se será um valor fixo ou uma porcentagem"
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "O valorem Porcentagem deve ser maior que 0.01 e menor que 99.99.  Já o valor fixo deve ser  maior que 1 "
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ]
                                }
                              },
                              "required": [
                                "cpfCnpj",
                                "commission"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 10
                          }
                        },
                        "required": [
                          "taxationMode",
                          "recipients"
                        ]
                      },
                      "cancelOverdue": {
                        "type": "boolean",
                        "description": "Cancelar a fatura quando a mesma vencer, passe true para cancelar"
                      },
                      "cancelOverdueDays": {
                        "type": "number",
                        "format": "float",
                        "enum": [
                          true,
                          false
                        ],
                        "minimum": 1,
                        "maximum": 60,
                        "description": "Determinar dias para o cancelamento da fatura após vencimento"
                      },
                      "mulctAndInterest": {
                        "description": "Configurar multa e juros",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "description": "Deseja criar configuração de multa e juros",
                            "type": "boolean",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "mulct": {
                            "description": "Multa após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "interest": {
                            "description": "Juros diário após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "observation": {
                        "description":"Você pode inserir também uma observação, com ate 300 caracteres ",
                        "type": "string",
                        "maxLength": 300
                      }
                    },
                    "required": [
                      "_clientId",
                      "items",
                      "recurrence",
                      "duration",
                      "paymentMethods"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "client": {
                        "description":"Criar um cliente juntamente com a fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "pf",
                              "pj"
                            ],
                            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "description": "Nome completo do cliente"
                          },
                          "treatmentPronoun": {
                            "type": "string",
                            "enum": [
                              "you",
                              "mr",
                              "lady"
                            ],
                            "description": "Saudação preferida<br/><br/>\n      you = Neutro<br/>\n      mr = Senhor<br/>\n      lady = Senhora"
                          },
                          "cpfCnpj": {
                            "type": "string",
                            "minLength": 11,
                            "maxLength": 14,
                            "description": "CPF ou CNPJ do cliente, somente números"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 255,
                            "description": "Email do cliente"
                          },
                          "cellphone": {
                            "type": "string",
                            "minLength": 10,
                            "maxLength": 11,
                            "description": "Número do celular do cliente, somente números, pode ser informado com ou sem digito 9"
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "street": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Rua/logradouro"
                              },
                              "zone": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Bairro/localidade"
                              },
                              "city": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Cidade"
                              },
                              "state": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "description": "Sigla do estado"
                              },
                              "number": {
                                "type": "string",
                                "maxLength": 255,
                                "nullable": true,
                                "description": "Número"
                              },
                              "complement": {
                                "type": "string",
                                "maxLength": 255,
                                "nullable": true,
                                "description": "Complemento"
                              },
                              "zip": {
                                "type": "string",
                                "minLength": 8,
                                "maxLength": 8,
                                "description": "Cep/código postal, apenas números"
                              }
                            },
                            "required": [
                              "street",
                              "zone",
                              "city",
                              "state",
                              "zip"
                            ],
                            "description": "Endereço do cliente"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "cpfCnpj",
                          "email",
                          "cellphone"
                        ]
                      },
                      "items": {
                        "description": "Informações do produto",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "Nome do Produto"
                            },
                            "quantity": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Quantidade"
                            },
                            "value": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Valor unitário do produto"
                            }
                          },
                          "required": [
                            "name",
                            "quantity",
                            "value"
                          ]
                        },
                        "minItems": 1
                      },
                      "recurrence": {
                        "description": "Repassar forma de cobrança, se será mensal ou anual, próxima fatura a ser gerada, o dia a ser gerado e a quantidade de dias para o vencimento.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "monthly"
                            ],
                            "description": "Tipo de Cobrança mensal ou anual"

                          },
                          "day": {
                            "type": "number",
                            "format": "float",
                            "minimum": 1,
                            "maximum": 28,
                            "description": "Dia que sera gerada a próxima fatura"
                          },
                          "dueDateDays": {
                            "type": "number",
                            "format": "float",
                            "minimum": 1,
                            "maximum": 15,
                            "description": "Dia de vencimento das faturas geradas"
                          },
                          "nextAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Data da próxima fatura a ser gerada"
                  
                          }
                        },
                        "required": [
                          "type",
                          "day",
                          "dueDateDays"
                        ]
                      },
                      "duration": {
                        "description": "Duração da recorrência",
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string",
                            "enum": [
                              "months",
                              "years",
                              "infinity"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "integer",
                                "minimum": 1,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "unit"
                        ]
                      },
                      "paymentMethods": {
                        "description": "Métodos de pagamento,cartão de crédito, boleto, pix. Repassar no cartão de créditos o parâmetro maxParcels",
                        "type": "object",
                        "properties": {
                          "pix": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "dueDateDays": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "creditCard": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "maxParcels": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "interestFreeUntil": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "monthlyInterest": {
                                "type": "integer",
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          }
                        },
                        "required": [
                          "pix",
                          "boleto",
                          "creditCard"
                        ]
                      },
                      "notifications": {
                        "description": "Habilitar ou desabilitar notificações",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "True para habilitar False para desabilitar" 
                          },
                          "channels": {
                            "description": "Canais de notificação ",
                                "type": "object",
                                "properties": {
                                  "sms": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de SMS"
                                  },
                                  "email": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de e-mail"
                                  },
                                  "whatsApp": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de whatsApp"
                                  }
                                },
                                "required": [
                                  "sms",
                                  "email",
                                  "whatsApp"
                                ],
                                "x-required": true
                          },
                          "types": {
                            "description": "Configurações de disparo da notificação",
                                "type": "object",
                                "properties": {
                                  "invoiceCreate": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação quando a fatura for criada"
                                  },
                                  "daysBeforeExpiration3": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação 3 dias antes da fatura vencer"
                                  },
                                  "expirationDay": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação no dia de expiração"
                                  },
                                  "invoicePaid": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação quando a fatura for paga "
                                
                                  }
                                },
                                "required": [
                                  "invoiceCreate",
                                  "daysBeforeExpiration3",
                                  "expirationDay",
                                  "invoicePaid"
                                ],
                                "x-required": true
                              }

                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "split": {
                        "description": "Para os estabelecimentos a fazer o split (tem que ser solicitado previamente no site)",
                        "type": "object",
                        "properties": {
                          "taxationMode": {
                            "type": "string",
                            "description": "modo de tributação",
                            "enum": [
                              "onlyPrimary"
                            ]
                          },
                          "recipients": {
                            "description": "Dados do destinatários",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpfCnpj": {
                                  "type": "string",
                                  "description": "CPF/CNPJ do destinatários"
                                },
                                "commission": {
                                  "description": "Configurar a comissão",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "fixedValue",
                                        "percentage"
                                      ],
                                      "description": "Definir se será um valor fixo ou uma porcentagem"
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "O valorem Porcentagem deve ser maior que 0.01 e menor que 99.99.  Já o valor fixo deve ser  maior que 1 "
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ]
                                }
                              },
                              "required": [
                                "cpfCnpj",
                                "commission"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 10
                          }
                        },
                        "required": [
                          "taxationMode",
                          "recipients"
                        ]
                      },
                      "cancelOverdue": {
                        "type": "boolean",
                        "description": "Cancelar a fatura quando a mesma vencer, passe true para cancelar"
                      },
                      "cancelOverdueDays": {
                        "type": "number",
                        "format": "float",
                        "enum": [
                          true,
                          false
                        ],
                        "minimum": 1,
                        "maximum": 60,
                        "description": "Determinar dias para o cancelamento da fatura após vencimento"
                      },
                      "mulctAndInterest": {
                        "description": "Configurar multa e juros",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "description": "Deseja criar configuração de multa e juros",
                            "type": "boolean",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "mulct": {
                            "description": "Multa após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "interest": {
                            "description": "Juros diário após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "observation": {
                        "description":"Você pode inserir também uma observação, com ate 300 caracteres ",
                        "type": "string",
                        "maxLength": 300
                      }
                    },
                    "required": [
                      "_clientId",
                      "items",
                      "recurrence",
                      "duration",
                      "paymentMethods"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Subscription",
                  "required": [
                    "paymentMethods",
                    "duration",
                    "recurrence",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "observation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "unit": {
                          "type": "string",
                          "enum": [
                            "months",
                            "years",
                            "infinity"
                          ]
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "properties": {
                        "nextAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dueDateDays": {
                          "type": "number"
                        },
                        "day": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "monthly"
                          ]
                        }
                      }
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.create"
            ]
          }
        ]
      },
      "get": {
        "operationId": "SubscriptionsController_listSubscriptions",
        "summary": "Listar assinaturas",
        "description": "Lista assinaturas do beneficiário, aceita filtros, ordenação e paginação.<br/><br/>\n    Use \"|\" como separador caso deseje passar vários valores nos campos: **clientTypes**, **status**",
        "parameters": [
          {
            "name": "search",
            "description":"Nome que deseja pesquisar ",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pf",
                "pj"
              ]
            },
            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Data Inicial"
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Data Final"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Página atual"
          },
          {
            "name": "perPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Quantidade de itens por página"
          },
          {
            "name": "sortField",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Campo de classificação"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              ]
            },
            "description": "Oredenar resposta"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number"
                                },
                                "quantity": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value",
                                "quantity",
                                "name"
                              ]
                            }
                          },
                          "client": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "object",
                                "properties": {
                                  "zip": {
                                    "type": "string"
                                  },
                                  "complement": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "zone": {
                                    "type": "string"
                                  },
                                  "street": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cellphone": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "cpfCnpj": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "pf",
                                  "pj"
                                ]
                              },
                              "treatmentPronoun": {
                                "type": "string",
                                "enum": [
                                  "you",
                                  "mr",
                                  "lady"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "recurrence": {
                            "type": "object",
                            "properties": {
                              "nextAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "dueDateDays": {
                                "type": "number"
                              },
                              "day": {
                                "type": "number"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "monthly"
                                ]
                              }
                            }
                          },
                          "duration": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "unit": {
                                "type": "string",
                                "enum": [
                                  "months",
                                  "years",
                                  "infinity"
                                ]
                              }
                            }
                          },
                          "totalValue": {
                            "type": "number"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.get"
            ]
          }
        ]
      }
    },
    "/v1/subscriptions/{id}": {
      "get": {
        "operationId": "SubscriptionsController_getSubscription",
        "summary": "Detalhes da Assinatura",
        "description": "Retorna detalhamento de uma assinatura",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador unico do cliente ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "observation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "unit": {
                          "type": "string",
                          "enum": [
                            "months",
                            "years",
                            "infinity"
                          ]
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "properties": {
                        "nextAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dueDateDays": {
                          "type": "number"
                        },
                        "day": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "monthly"
                          ]
                        }
                      }
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Assinatura inválida"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.get"
            ]
          }
        ]
      },
      "put": {
        "operationId": "SubscriptionsController_updateSubscription",
        "summary": "Atualizar Assinatura",
        "description": "Atualiza uma assinatura de um usuário.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {

                  "items": {
                    "description": "Informações do produto",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 255,
                          "description": "Nome do Produto"
                        },
                        "quantity": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Quantidade"
                        },
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Valor unitário do produto"
                        }
                      },
                      "required": [
                        "name",
                        "quantity",
                        "value"
                      ]
                    },
                    "minItems": 1
                  },
                  "recurrence": {
                    "description": "Repassar forma de cobrança, se será mensal ou anual, próxima fatura a ser gerada, o dia a ser gerado e a quantidade de dias para o vencimento.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "monthly"
                        ],
                        "description": "Tipo de Cobrança mensal ou anual"

                      },
                      "day": {
                        "type": "number",
                        "format": "float",
                        "minimum": 1,
                        "maximum": 28,
                        "description": "Dia que sera gerada a próxima fatura"
                      },
                      "dueDateDays": {
                        "type": "number",
                        "format": "float",
                        "minimum": 1,
                        "maximum": 15,
                        "description": "Dia de vencimento das faturas geradas"
                      },
                      "nextAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Data da próxima fatura a ser gerada"
              
                      }
                    },
                    "required": [
                      "type",
                      "day",
                      "dueDateDays"
                    ]
                  },
                  "duration": {
                    "description": "Duração da recorrência",
                    "type": "object",
                    "properties": {
                      "unit": {
                        "type": "string",
                        "enum": [
                          "months",
                          "years",
                          "infinity"
                        ]
                      },
                      "value": {
                        "oneOf": [
                          {
                            "type": "integer",
                            "minimum": 1,
                            "x-required": true
                          }
                        ]
                      }
                    },
                    "required": [
                      "unit"
                    ]
                  },
                  "paymentMethods": {
                    "description": "Métodos de pagamento,cartão de crédito, boleto, pix. Repassar no cartão de créditos o parâmetro maxParcels",
                    "type": "object",
                    "properties": {
                      "pix": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "boleto": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "dueDateDays": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "creditCard": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "maxParcels": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "interestFreeUntil": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "monthlyInterest": {
                            "type": "integer",
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      }
                    },
                    "required": [
                      "pix",
                      "boleto",
                      "creditCard"
                    ]
                  },
                  "notifications": {
                    "description": "Habilitar ou desabilitar notificações",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "True para habilitar False para desabilitar" 
                      },
                      "channels": {
                        "description": "Canais de notificação ",
                            "type": "object",
                            "properties": {
                              "sms": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de SMS"
                              },
                              "email": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de e-mail"
                              },
                              "whatsApp": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de whatsApp"
                              }
                            },
                            "required": [
                              "sms",
                              "email",
                              "whatsApp"
                            ],
                            "x-required": true
                      },
                      "types": {
                        "description": "Configurações de disparo da notificação",
                            "type": "object",
                            "properties": {
                              "invoiceCreate": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação quando a fatura for criada"
                              },
                              "daysBeforeExpiration3": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação 3 dias antes da fatura vencer"
                              },
                              "expirationDay": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação no dia de expiração"
                              },
                              "invoicePaid": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação quando a fatura for paga "
                            
                              }
                            },
                            "required": [
                              "invoiceCreate",
                              "daysBeforeExpiration3",
                              "expirationDay",
                              "invoicePaid"
                            ],
                            "x-required": true
                          }

                    },
                    "required": [
                      "enable"
                    ]
                  },
                  "split": {
                    "description": "Para os estabelecimentos a fazer o split (tem que ser solicitado previamente no site)",
                    "type": "object",
                    "properties": {
                      "taxationMode": {
                        "type": "string",
                        "description": "modo de tributação",
                        "enum": [
                          "onlyPrimary"
                        ]
                      },
                      "recipients": {
                        "description": "Dados do destinatários",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cpfCnpj": {
                              "type": "string",
                              "description": "CPF/CNPJ do destinatários"
                            },
                            "commission": {
                              "description": "Configurar a comissão",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "fixedValue",
                                    "percentage"
                                  ],
                                  "description": "Definir se será um valor fixo ou uma porcentagem"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1,
                                  "description": "O valorem Porcentagem deve ser maior que 0.01 e menor que 99.99.  Já o valor fixo deve ser  maior que 1 "
                                }
                              },
                              "required": [
                                "type",
                                "value"
                              ]
                            }
                          },
                          "required": [
                            "cpfCnpj",
                            "commission"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 10
                      }
                    },
                    "required": [
                      "taxationMode",
                      "recipients"
                    ]
                  },
                  "cancelOverdue": {
                    "type": "boolean",
                    "description": "Cancelar a fatura quando a mesma vencer, passe true para cancelar"
                  },
                  "cancelOverdueDays": {
                    "type": "number",
                    "format": "float",
                    "enum": [
                      true,
                      false
                    ],
                    "minimum": 1,
                    "maximum": 60,
                    "description": "Determinar dias para o cancelamento da fatura após vencimento"
                  },
                  "mulctAndInterest": {
                    "description": "Configurar multa e juros",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "description": "Deseja criar configuração de multa e juros",
                        "type": "boolean",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "mulct": {
                        "description": "Multa após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "interest": {
                        "description": "Juros diário após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "enable"
                    ]
                  },
                  "observation": {
                    "description":"Você pode inserir também uma observação, com ate 300 caracteres ",
                    "type": "string",
                    "maxLength": 300
                  }
                },
                "required": [
                  "items",
                  "recurrence",
                  "duration",
                  "paymentMethods"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Identificador unico do cliente ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Subscription",
                  "required": [
                    "paymentMethods",
                    "duration",
                    "recurrence",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "observation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "unit": {
                          "type": "string",
                          "enum": [
                            "months",
                            "years",
                            "infinity"
                          ]
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "properties": {
                        "nextAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dueDateDays": {
                          "type": "number"
                        },
                        "day": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "monthly"
                          ]
                        }
                      }
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.update"
            ]
          }
        ]
      }
    },
    "/v1/subscriptions/cancel/{id}": {
      "put": {
        "operationId": "SubscriptionsController_cancel",
        "summary": "Cancelar recorrência",
        "description": "Cancelar uma recorrência de um determinado cliente.",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador unico do cliente ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Subscription",
                  "required": [
                    "paymentMethods",
                    "duration",
                    "recurrence",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "observation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "unit": {
                          "type": "string",
                          "enum": [
                            "months",
                            "years",
                            "infinity"
                          ]
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "properties": {
                        "nextAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dueDateDays": {
                          "type": "number"
                        },
                        "day": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "monthly"
                          ]
                        }
                      }
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.cancel"
            ]
          }
        ]
      }
    },
    "/v1/invoices": {
      "post": {
        "operationId": "InvoicesController_createInvoice",
        "summary": "Criar fatura",
        "description": "Cria uma fatura para um determinado cliente. [Diagrama criacão de faturas](/static/swagger/fluxogram-create-invoice.html)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_clientId": {
                        "type": "string",
                        "description": "Identificar unico do cliente já cadastrado "
                      },
                      "items": {
                        "description": "Informações do produto",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "Nome do Produto"
                            },
                            "quantity": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Quantidade"
                            },
                            "value": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Valor unitário do produto"
                            }
                          },
                          "required": [
                            "name",
                            "quantity",
                            "value"
                          ]
                        },
                        "minItems": 1
                      },
                      "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "description":"Dia de vencimento  da cobrança "
                      },
                      "paymentMethods": {
                        "description": "Métodos de pagamento,cartão de crédito, boleto, pix. Repassar no cartão de créditos o parâmetro maxParcels",
                        "type": "object",
                        "properties": {
                          "pix": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "dueDateDays": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "creditCard": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "maxParcels": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "interestFreeUntil": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "monthlyInterest": {
                                "type": "integer",
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          }
                        },
                        "required": [
                          "pix",
                          "boleto",
                          "creditCard"
                        ]
                      },
                      "split": {
                        "description": "Para os estabelecimentos a fazer o split (tem que ser solicitado previamente no site)",
                        "type": "object",
                        "properties": {
                          "taxationMode": {
                            "type": "string",
                            "description": "modo de tributação",
                            "enum": [
                              "onlyPrimary"
                            ]
                          },
                          "recipients": {
                            "description": "Dados do destinatários",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpfCnpj": {
                                  "type": "string",
                                  "description": "CPF/CNPJ do destinatários"
                                },
                                "commission": {
                                  "description": "Configurar a comissão",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "fixedValue",
                                        "percentage"
                                      ],
                                      "description": "Definir se será um valor fixo ou uma porcentagem"
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "O valorem Porcentagem deve ser maior que 0.01 e menor que 99.99.  Já o valor fixo deve ser  maior que 1 "
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ]
                                }
                              },
                              "required": [
                                "cpfCnpj",
                                "commission"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 10
                          }
                        },
                        "required": [
                          "taxationMode",
                          "recipients"
                        ]
                      },
                      "discount": {
                        "description":"Configurar descontos no pagamento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Escolha o tipo de desconto que deseja aplica Fixo ou Porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "discounts": {
                            "description":"Objetos de configurações, podendo inserir ate 3 objetos de configurações ",
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "maximum": 99,
                                      "description":"Valor do desconto em porcentagem deve ser maior que 1 e menor que 99"
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description":"Data de validade do desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description":"Valor do desconto fixo deve ser maior que 1"
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description":"Data de validade do desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "_paymentLinkId": {
                        "description":"identificador único do link de pagamento, caso ja esteja criado o link",
                        "type": "string"
                      },
                      "notifications": {
                        "description": "Habilitar ou desabilitar notificações",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "True para habilitar False para desabilitar" 
                          },
                          "channels": {
                            "description": "Canais de notificação ",
                                "type": "object",
                                "properties": {
                                  "sms": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de SMS"
                                  },
                                  "email": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de e-mail"
                                  },
                                  "whatsApp": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de whatsApp"
                                  }
                                },
                                "required": [
                                  "sms",
                                  "email",
                                  "whatsApp"
                                ],
                                "x-required": true
                          },
                          "types": {
                            "description": "Configurações de disparo da notificação",
                                "type": "object",
                                "properties": {
                                  "invoiceCreate": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação quando a fatura for criada"
                                  },
                                  "daysBeforeExpiration3": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação 3 dias antes da fatura vencer"
                                  },
                                  "expirationDay": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação no dia de expiração"
                                  },
                                  "invoicePaid": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação quando a fatura for paga "
                                
                                  }
                                },
                                "required": [
                                  "invoiceCreate",
                                  "daysBeforeExpiration3",
                                  "expirationDay",
                                  "invoicePaid"
                                ],
                                "x-required": true
                              }

                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "referenceId": {
                        "description":"Pode-se inserir um identificador de referencia",
                        "type": "string",
                        "maxLength": 150
                      },
                      "cancelOverdue": {
                        "enum": [
                          true,
                          false
                        ],
                        "type": "boolean",
                        "description": "Cancelar a fatura quando a mesma vencer, passe true para cancelar"
                      },
                      "cancelOverdueDays": {
                        "type": "number",
                        "format": "float",
                        "minimum": 1,
                        "maximum": 60,
                        "description": "Determinar dias para o cancelamento da fatura após vencimento"
                      },
                      "mulctAndInterest": {
                        "description": "Configurar multa e juros",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "description": "Deseja criar configuração de multa e juros",
                            "type": "boolean",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "mulct": {
                            "description": "Multa após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "interest": {
                            "description": "Juros diário após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "observation": {
                        "description":"Você pode inserir também uma observação, com ate 300 caracteres ",
                        "type": "string",
                        "maxLength": 300
                      }
                    },
                    "required": [
                      "_clientId",
                      "items",
                      "dueDate",
                      "paymentMethods"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "client": {
                        "description":"Criar um cliente juntamente com a fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "pf",
                              "pj"
                            ],
                            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "description": "Nome completo do cliente"
                          },
                          "treatmentPronoun": {
                            "type": "string",
                            "enum": [
                              "you",
                              "mr",
                              "lady"
                            ],
                            "description": "Saudação preferida<br/><br/>\n      you = Neutro<br/>\n      mr = Senhor<br/>\n      lady = Senhora"
                          },
                          "cpfCnpj": {
                            "type": "string",
                            "minLength": 11,
                            "maxLength": 14,
                            "description": "CPF ou CNPJ do cliente, somente números"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 255,
                            "description": "Email do cliente"
                          },
                          "cellphone": {
                            "type": "string",
                            "minLength": 10,
                            "maxLength": 11,
                            "description": "Número do celular do cliente, somente números, pode ser informado com ou sem digito 9"
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "street": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Rua/logradouro"
                              },
                              "zone": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Bairro/localidade"
                              },
                              "city": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Cidade"
                              },
                              "state": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "description": "Sigla do estado"
                              },
                              "number": {
                                "type": "string",
                                "maxLength": 255,
                                "nullable": true,
                                "description": "Número"
                              },
                              "complement": {
                                "type": "string",
                                "maxLength": 255,
                                "nullable": true,
                                "description": "Complemento"
                              },
                              "zip": {
                                "type": "string",
                                "minLength": 8,
                                "maxLength": 8,
                                "description": "Cep/código postal, apenas números"
                              }
                            },
                            "required": [
                              "street",
                              "zone",
                              "city",
                              "state",
                              "zip"
                            ],
                            "description": "Endereço do cliente"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "cpfCnpj",
                          "email",
                          "cellphone"
                        ]
                      },
                      "items": {
                        "description": "Informações do produto",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "Nome do Produto"
                            },
                            "quantity": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Quantidade"
                            },
                            "value": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Valor unitário do produto"
                            }
                          },
                          "required": [
                            "name",
                            "quantity",
                            "value"
                          ]
                        },
                        "minItems": 1
                      },
                      "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "description":"Dia de vencimento  da cobrança "
                      },
                      "paymentMethods": {
                        "description": "Métodos de pagamento,cartão de crédito, boleto, pix. Repassar no cartão de créditos o parâmetro maxParcels",
                        "type": "object",
                        "properties": {
                          "pix": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "dueDateDays": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "creditCard": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "maxParcels": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "interestFreeUntil": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "monthlyInterest": {
                                "type": "integer",
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          }
                        },
                        "required": [
                          "pix",
                          "boleto",
                          "creditCard"
                        ]
                      },
                      "split": {
                        "description": "Para os estabelecimentos a fazer o split (tem que ser solicitado previamente no site)",
                        "type": "object",
                        "properties": {
                          "taxationMode": {
                            "type": "string",
                            "description": "modo de tributação",
                            "enum": [
                              "onlyPrimary"
                            ]
                          },
                          "recipients": {
                            "description": "Dados do destinatários",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpfCnpj": {
                                  "type": "string",
                                  "description": "CPF/CNPJ do destinatários"
                                },
                                "commission": {
                                  "description": "Configurar a comissão",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "fixedValue",
                                        "percentage"
                                      ],
                                      "description": "Definir se será um valor fixo ou uma porcentagem"
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "O valorem Porcentagem deve ser maior que 0.01 e menor que 99.99.  Já o valor fixo deve ser  maior que 1 "
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ]
                                }
                              },
                              "required": [
                                "cpfCnpj",
                                "commission"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 10
                          }
                        },
                        "required": [
                          "taxationMode",
                          "recipients"
                        ]
                      },
                      "discount": {
                        "description":"Configurar descontos no pagamento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Escolha o tipo de desconto que deseja aplica Fixo ou Porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "discounts": {
                            "description":"Objetos de configurações, podendo inserir ate 3 objetos de configurações ",
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "maximum": 99,
                                      "description":"Valor do desconto em porcentagem deve ser maior que 1 e menor que 99"
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description":"Data de validade do desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description":"Valor do desconto fixo deve ser maior que 1"
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description":"Data de validade do desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "_paymentLinkId": {
                        "description":"identificador único do link de pagamento, caso ja esteja criado o link",
                        "type": "string"
                      },
                      "notifications": {
                        "description": "Habilitar ou desabilitar notificações",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "True para habilitar False para desabilitar" 
                          },
                          "channels": {
                            "description": "Canais de notificação ",
                                "type": "object",
                                "properties": {
                                  "sms": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de SMS"
                                  },
                                  "email": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de e-mail"
                                  },
                                  "whatsApp": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Canail de whatsApp"
                                  }
                                },
                                "required": [
                                  "sms",
                                  "email",
                                  "whatsApp"
                                ],
                                "x-required": true
                          },
                          "types": {
                            "description": "Configurações de disparo da notificação",
                                "type": "object",
                                "properties": {
                                  "invoiceCreate": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação quando a fatura for criada"
                                  },
                                  "daysBeforeExpiration3": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação 3 dias antes da fatura vencer"
                                  },
                                  "expirationDay": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação no dia de expiração"
                                  },
                                  "invoicePaid": {
                                    "enum": [
                                      "true",
                                      "false"
                                    ],
                                    "type": "boolean",
                                    "description": "Enviar notificação quando a fatura for paga "
                                
                                  }
                                },
                                "required": [
                                  "invoiceCreate",
                                  "daysBeforeExpiration3",
                                  "expirationDay",
                                  "invoicePaid"
                                ],
                                "x-required": true
                              }

                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "referenceId": {
                        "description":"Pode-se inserir um identificador de referencia",
                        "type": "string",
                        "maxLength": 150
                      },
                      "cancelOverdue": {
                        "enum": [
                          true,
                          false
                        ],
                        "type": "boolean",
                        "description": "Cancelar a fatura quando a mesma vencer, passe true para cancelar"
                      },
                      "cancelOverdueDays": {
                        "type": "number",
                        "format": "float",
                        "minimum": 1,
                        "maximum": 60,
                        "description": "Determinar dias para o cancelamento da fatura após vencimento"
                      },
                      "mulctAndInterest": {
                        "description": "Configurar multa e juros",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "description": "Deseja criar configuração de multa e juros",
                            "type": "boolean",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "mulct": {
                            "description": "Multa após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "interest": {
                            "description": "Juros diário após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "observation": {
                        "description":"Você pode inserir também uma observação, com ate 300 caracteres ",
                        "type": "string",
                        "maxLength": 300
                      }
                    },
                    "required": [
                      "client",
                      "items",
                      "dueDate",
                      "paymentMethods"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invoice",
                  "required": [
                    "rates",
                    "paymentData",
                    "paymentMethods",
                    "dueDate",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "cancelDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "whatsapp": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "sms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentData": {
                      "type": "object",
                      "properties": {
                        "payedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "payedValue": {
                          "type": "number"
                        },
                        "parcels": {
                          "type": "number"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "pix",
                            "boleto",
                            "creditCard",
                            "debitCard"
                          ]
                        },
                        "_transactionId": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "discounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "validUntil": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "value": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "validUntil",
                              "value"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fixedValue",
                            "percentage"
                          ]
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "_applicationId": {
                      "type": "string"
                    },
                    "_paymentLinkId": {
                      "type": "string"
                    },
                    "_subscriptionId": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.create"
            ]
          }
        ]
      },
      "get": {
        "operationId": "InvoicesController_listInvoices",
        "summary": "Listar faturas",
        "description": "Lista faturas do beneficiário, aceita filtros, ordenação e paginação.<br/><br/>\n    Use \"|\" como separador caso deseje passar vários valores nos campos: **clientTypes**, **status**",
        "parameters": [
          {
            "name": "search",
            "description": "Nome a ser pesquisado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pf",
                "pj"
              ]
            },
            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
          },
          {
            "name": "startDate",
            "description": "Data Inicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "description": "Data final",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "status",
            "description": "status da fatura",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payedStartDate",
            "description":"data de início paga",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "payedEndDate",
            "description": "data final paga",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationStartDate",
            "description": "data de início da criação",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationEndDate",
            "description": "data final da criação",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "exportTo",
            "description": "tipo de resposta",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "xlsx",
                "json"
              ],
              "default": "json"
            }
          },
          {
            "name": "_paymentLinkId",
            "description":"identificador único do link de pagamento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "splitSelected",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "página atual",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "description": "Quantidade de itens por página",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "sortField",
            "description": "campo de classificação",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "description": "Ordenar resposta ",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number"
                                },
                                "quantity": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value",
                                "quantity",
                                "name"
                              ]
                            }
                          },
                          "client": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "object",
                                "properties": {
                                  "zip": {
                                    "type": "string"
                                  },
                                  "complement": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "zone": {
                                    "type": "string"
                                  },
                                  "street": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cellphone": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "cpfCnpj": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "pf",
                                  "pj"
                                ]
                              },
                              "treatmentPronoun": {
                                "type": "string",
                                "enum": [
                                  "you",
                                  "mr",
                                  "lady"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "dueDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "totalValue": {
                            "type": "number"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.get"
            ]
          }
        ]
      }
    },
    "/v1/invoices/split-min-value": {
      "post": {
        "operationId": "InvoicesController_validateMinSplitValue",
        "summary": "Validar valor mínimo para Split",
        "description": "Retorna com o valor mínimo para split, caso o valor seja menor que o mínimo, o split não será permitido",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "totalValue": {
                    "description":"valor total, maior que 200",
                    "type": "number",
                    "format": "float",
                    "minimum": 200
                  },
                  "taxationMode": {
                    "description":"modo de tributação",
                    "type": "string",
                    "enum": [
                      "onlyPrimary"
                    ]
                  }
                },
                "required": [
                  "taxationMode"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minValue": {
                      "type": "number",
                      "example": 99
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.create"
            ]
          }
        ]
      }
    },
    "/v1/invoices/{id}": {
      "get": {
        "operationId": "InvoicesController_getInvoice",
        "summary": "Detalhes da fatura",
        "description": "Retorna detalhamento da fatura com histórico de transação",
        "parameters": [
          {
            "name": "id",
            "description":"Identificador  unico da fatura",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "cancelDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "whatsapp": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "sms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentData": {
                      "type": "object",
                      "properties": {
                        "payedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "payedValue": {
                          "type": "number"
                        },
                        "parcels": {
                          "type": "number"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "pix",
                            "boleto",
                            "creditCard",
                            "debitCard"
                          ]
                        },
                        "_transactionId": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "discounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "validUntil": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "value": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "validUntil",
                              "value"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fixedValue",
                            "percentage"
                          ]
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "_applicationId": {
                      "type": "string"
                    },
                    "_paymentLinkId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_id": {
                      "type": "string"
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "requestMetadata": {
                            "type": "object",
                            "properties": {
                              "geolocation": {
                                "type": "object",
                                "properties": {
                                  "accuracy": {
                                    "type": "number"
                                  },
                                  "altitude": {
                                    "type": "number"
                                  },
                                  "longitude": {
                                    "type": "number"
                                  },
                                  "latitude": {
                                    "type": "number"
                                  }
                                }
                              },
                              "ip": {
                                "type": "string"
                              },
                              "userAgent": {
                                "type": "string"
                              }
                            }
                          },
                          "payedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "payedValue": {
                            "type": "number"
                          },
                          "creditCard": {
                            "type": "object",
                            "properties": {
                              "reject": {
                                "type": "object",
                                "properties": {
                                  "reason": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "agent": {
                                    "type": "string",
                                    "enum": [
                                      "lypag",
                                      "cielo",
                                      "brand",
                                      "bank"
                                    ]
                                  }
                                }
                              },
                              "authorizationCode": {
                                "type": "string"
                              },
                              "nsu": {
                                "type": "string"
                              },
                              "tid": {
                                "type": "string"
                              },
                              "paymentId": {
                                "type": "string"
                              },
                              "parcels": {
                                "type": "number"
                              },
                              "receiveType": {
                                "type": "string",
                                "enum": [
                                  "noAdvance",
                                  "advance30days"
                                ]
                              },
                              "_referenceId": {
                                "type": "string"
                              },
                              "operator": {
                                "type": "string"
                              }
                            }
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "dueDate": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "barcode": {
                                "type": "string"
                              },
                              "digitableLine": {
                                "type": "string"
                              },
                              "ourNumber": {
                                "type": "string"
                              },
                              "_referenceId": {
                                "type": "string"
                              },
                              "operator": {
                                "type": "string"
                              }
                            }
                          },
                          "pix": {
                            "type": "object",
                            "properties": {
                              "dueDate": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "qrcode": {
                                "type": "string"
                              },
                              "txId": {
                                "type": "string"
                              },
                              "_referenceId": {
                                "type": "string"
                              },
                              "operator": {
                                "type": "string"
                              }
                            }
                          },
                          "discount": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "validUntil": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "value": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "validUntil",
                                "value"
                              ]
                            }
                          },
                          "interest": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              }
                            }
                          },
                          "mulct": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              }
                            }
                          },
                          "value": {
                            "type": "number"
                          },
                          "status": {
                            "type": "string"
                          },
                          "paymentMethod": {
                            "type": "string"
                          },
                          "_id": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Fatura inválida"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.get"
            ]
          }
        ]
      },
      "put": {
        "operationId": "InvoicesController_updateInvoice",
        "summary": "Atualizar fatura",
        "description": "Atualiza uma fatura de um determinado cliente.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dueDate": {
                    "description": "Data de Vencimento",
                    "type": "string",
                    "format": "date-time"
                  },
                  "notifications": {
                    "description": "Habilitar ou desabilitar notificações",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "True para habilitar False para desabilitar" 
                      },
                      "channels": {
                        "description": "Canais de notificação ",
                            "type": "object",
                            "properties": {
                              "sms": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de SMS"
                              },
                              "email": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de e-mail"
                              },
                              "whatsApp": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de whatsApp"
                              }
                            },
                            "required": [
                              "sms",
                              "email",
                              "whatsApp"
                            ],
                            "x-required": true
                      },
                      "types": {
                        "description": "Configurações de disparo da notificação",
                            "type": "object",
                            "properties": {
                              "invoiceCreate": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação quando a fatura for criada"
                              },
                              "daysBeforeExpiration3": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação 3 dias antes da fatura vencer"
                              },
                              "expirationDay": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação no dia de expiração"
                              },
                              "invoicePaid": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação quando a fatura for paga "
                            
                              }
                            },
                            "required": [
                              "invoiceCreate",
                              "daysBeforeExpiration3",
                              "expirationDay",
                              "invoicePaid"
                            ],
                            "x-required": true
                          }

                    },
                    "required": [
                      "enable"
                    ]
                  },
                  "observation": {
                    "description":"Você pode inserir também uma observação, com ate 300 caracteres ",
                    "type": "string",
                    "maxLength": 300
                  },
                  "cancelOverdue": {
                    "enum": [
                      true,
                      false
                    ],
                    "type": "boolean",
                    "description": "Cancelar a fatura quando a mesma vencer, passe true para cancelar"
                  },
                  "cancelOverdueDays": {
                    "type": "number",
                    "format": "float",
                    "minimum": 1,
                    "maximum": 60,
                    "description": "Determinar dias para o cancelamento da fatura após vencimento"
                  },
                  "mulctAndInterest": {
                    "description": "Configurar multa e juros",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "description": "Deseja criar configuração de multa e juros",
                        "type": "boolean",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "mulct": {
                        "description": "Multa após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "interest": {
                        "description": "Juros diário após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "enable"
                    ]
                  }
                },
                "required": [
                  "dueDate"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description":"Identificador unico da fatura",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invoice",
                  "required": [
                    "rates",
                    "paymentData",
                    "paymentMethods",
                    "dueDate",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "cancelDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "whatsapp": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "sms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentData": {
                      "type": "object",
                      "properties": {
                        "payedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "payedValue": {
                          "type": "number"
                        },
                        "parcels": {
                          "type": "number"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "pix",
                            "boleto",
                            "creditCard",
                            "debitCard"
                          ]
                        },
                        "_transactionId": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "discounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "validUntil": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "value": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "validUntil",
                              "value"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fixedValue",
                            "percentage"
                          ]
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "_applicationId": {
                      "type": "string"
                    },
                    "_paymentLinkId": {
                      "type": "string"
                    },
                    "_subscriptionId": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.update"
            ]
          }
        ]
      }
    },
    "/v1/invoices/email/{id}": {
      "post": {
        "operationId": "InvoicesController_sendMail",
        "summary": "Reenvia Email",
        "description": "Reenvia email para o cliente da fatura",
        "parameters": [
          {
            "name": "id",
            "description":"Identificador unico da fatura",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.create"
            ]
          }
        ]
      }
    },
    "/v1/invoices/cancel/{id}": {
      "put": {
        "operationId": "InvoicesController_cancel",
        "summary": "Cancelar fatura",
        "description": "Cancelar uma fatura de um determinado cliente.",
        "parameters": [
          {
            "name": "id",
            "description":"Identificador unico da fatura",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invoice",
                  "required": [
                    "rates",
                    "paymentData",
                    "paymentMethods",
                    "dueDate",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "cancelDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "whatsapp": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "sms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentData": {
                      "type": "object",
                      "properties": {
                        "payedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "payedValue": {
                          "type": "number"
                        },
                        "parcels": {
                          "type": "number"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "pix",
                            "boleto",
                            "creditCard",
                            "debitCard"
                          ]
                        },
                        "_transactionId": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "discounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "validUntil": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "value": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "validUntil",
                              "value"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fixedValue",
                            "percentage"
                          ]
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "_applicationId": {
                      "type": "string"
                    },
                    "_paymentLinkId": {
                      "type": "string"
                    },
                    "_subscriptionId": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.cancel"
            ]
          }
        ]
      }
    },
    "/v1/invoices/{id}/manual-liquidate": {
      "post": {
        "operationId": "InvoicesController_manualLiquidate",
        "summary": "Pagar fatura (sandbox)",
        "description": "Pagar uma fatura de um determinado cliente. Esta operação é apenas para fins de testes.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "pix",
                      "boleto",
                      "creditCard",
                      "debitCard"
                    ]
                  },
                  "parcels": {
                    "description":"parcelas a pagar",
                    "oneOf": [
                      {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 12,
                        "x-required": true
                      }
                    ]
                  },
                  "paidValue": {
                    "description":"valor pago",
                    "oneOf": [
                      {
                        "type": "integer",
                        "minimum": 200,
                        "maximum": 5000000,
                        "x-required": true
                      }
                    ]
                  },
                  "paidDate": {
                    "description":"data do pagamento",
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "date-time",
                        "x-required": true
                      }
                    ]
                  }
                },
                "required": [
                  "paymentMethod"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description":"Identificador unico da fatura",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invoice",
                  "required": [
                    "rates",
                    "paymentData",
                    "paymentMethods",
                    "dueDate",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "cancelDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "whatsapp": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "sms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentData": {
                      "type": "object",
                      "properties": {
                        "payedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "payedValue": {
                          "type": "number"
                        },
                        "parcels": {
                          "type": "number"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "pix",
                            "boleto",
                            "creditCard",
                            "debitCard"
                          ]
                        },
                        "_transactionId": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "discounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "validUntil": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "value": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "validUntil",
                              "value"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fixedValue",
                            "percentage"
                          ]
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "_applicationId": {
                      "type": "string"
                    },
                    "_paymentLinkId": {
                      "type": "string"
                    },
                    "_subscriptionId": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.create"
            ]
          }
        ]
      }
    },
    "/v1/receivables/{transactionId}": {
      "get": {
        "operationId": "ReceivablesController_getReceivablesByTransaction",
        "summary": "Listar recebíveis de uma transação",
        "description": "Listar todos os recebíveis gerados atravez de uma transação",
        "parameters": [
          {
            "name": "transactionId",
            "description":"Identificador unico da transação",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso"
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recebíveis"
        ],
        "security": [
          {
            "lytexAuth": [
              "receivable.get"
            ]
          }
        ]
      }
    },
    "/v1/payment_links": {
      "post": {
        "operationId": "PaymentLinksController_createPaymentLink",
        "summary": "Criar link de pagamento",
        "description": "Cria um link de pagamento. [Diagrama criacão de link de pagamento](/static/swagger/fluxogram-create-payment-link.html)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "description":"descricao do link de pagamento",
                    "type": "string",
                    "maxLength": 255
                  },
                  "items": {
                    "description": "Informações do produto",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 255,
                          "description": "Nome do Produto"
                        },
                        "quantity": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Quantidade"
                        },
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Valor unitário do produto"
                        }
                      },
                      "required": [
                        "name",
                        "quantity",
                        "value"
                      ]
                    },
                    "minItems": 1
                  },
                  "expirationDate": {
                    "description": "Data para expirar o link de pagamento ",
                    "type": "string",
                    "format": "date-time"
                  },
                  "quantity": {
                    "description": "Quantidade de utilização ( contabiliza as faturas pagas ) ",
                    "type": "number",
                    "format": "float",
                    "minimum": 1
                  },
                  "paymentMethods": {
                    "description": "Métodos de pagamento,cartão de crédito, boleto, pix. Repassar no cartão de créditos o parâmetro maxParcels",
                    "type": "object",
                    "properties": {
                      "pix": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "boleto": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "dueDateDays": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "creditCard": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "maxParcels": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "interestFreeUntil": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "monthlyInterest": {
                            "type": "integer",
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      }
                    },
                    "required": [
                      "pix",
                      "boleto",
                      "creditCard"
                    ]
                  },
                  "notifications": {
                    "description": "Habilitar ou desabilitar notificações",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "True para habilitar False para desabilitar" 
                      },
                      "channels": {
                        "description": "Canais de notificação ",
                            "type": "object",
                            "properties": {
                              "sms": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de SMS"
                              },
                              "email": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de e-mail"
                              },
                              "whatsApp": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de whatsApp"
                              }
                            },
                            "required": [
                              "sms",
                              "email",
                              "whatsApp"
                            ],
                            "x-required": true
                      },
                      "types": {
                        "description": "Configurações de disparo da notificação",
                            "type": "object",
                            "properties": {
                              "invoiceCreate": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação quando a fatura for criada"
                              },
                              "daysBeforeExpiration3": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação 3 dias antes da fatura vencer"
                              },
                              "expirationDay": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação no dia de expiração"
                              },
                              "invoicePaid": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação quando a fatura for paga "
                            
                              }
                            },
                            "required": [
                              "invoiceCreate",
                              "daysBeforeExpiration3",
                              "expirationDay",
                              "invoicePaid"
                            ],
                            "x-required": true
                          }

                    },
                    "required": [
                      "enable"
                    ]
                  },
                  "split": {
                    "type": "object",
                    "properties": {
                      "taxationMode": {
                        "type": "string",
                        "enum": [
                          "onlyPrimary"
                        ]
                      },
                      "recipients": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cpfCnpj": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "x-required": true
                                }
                              ]
                            },
                            "commission": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "fixedValue",
                                    "percentage"
                                  ]
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1
                                }
                              },
                              "required": [
                                "type",
                                "value"
                              ]
                            }
                          },
                          "required": [
                            "cpfCnpj",
                            "commission"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 10
                      }
                    },
                    "required": [
                      "taxationMode",
                      "recipients"
                    ]
                  },
                  "cancelOverdue": {
                    "enum": [
                      true,
                      false
                    ],
                    "type": "boolean",
                    "description": "Cancelar a fatura quando a mesma vencer, passe true para cancelar"
                  },
                  "cancelOverdueDays": {
                    "type": "number",
                    "format": "float",
                    "minimum": 1,
                    "maximum": 60,
                    "description": "Determinar dias para o cancelamento da fatura após vencimento"
                  },
                  "mulctAndInterest": {
                    "description": "Configurar multa e juros",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "description": "Deseja criar configuração de multa e juros",
                        "type": "boolean",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "mulct": {
                        "description": "Multa após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "interest": {
                        "description": "Juros diário após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "enable"
                    ]
                  },
                  "observation": {
                    "description":"Você pode inserir também uma observação, com ate 300 caracteres ",
                    "type": "string",
                    "maxLength": 300
                  }
                },
                "required": [
                  "description",
                  "items",
                  "paymentMethods"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLink",
                  "required": [
                    "paymentMethods",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "description"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "observation": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "disabled",
                        "expired"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.create"
            ]
          }
        ]
      },
      "get": {
        "operationId": "PaymentLinksController_listPaymentLinks",
        "summary": "Listar links de pagamento",
        "description": "Lista links de pagamento do beneficiário, aceita filtros, ordenação e paginação.",
        "parameters": [
          {
            "name": "search",
            "description": "Nome a ser pesquisado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "description": "Data Inicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "description": "Data final",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "isActive",
            "description": "buscar por link ativos",
            "in": "query",
            "schema": {
              "enum":[
                true,
                false
              ],
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "description": "status do link de pagamento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "página atual",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "description": "Quantidade de itens por página",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "sortField",
            "description": "campo de classificação",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "description": "Ordenar resposta ",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number"
                                },
                                "quantity": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value",
                                "quantity",
                                "name"
                              ]
                            }
                          },
                          "expirationDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "totalValue": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.get"
            ]
          }
        ]
      }
    },
    "/v1/payment_links/{id}": {
      "get": {
        "operationId": "PaymentLinksController_getPaymentLink",
        "summary": "Detalhes do link de pagamento",
        "description": "Retorna detalhamento do link de pagamento",
        "parameters": [
          {
            "name": "id",
            "description":"Identificador unico do link de pagamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLink",
                  "required": [
                    "paymentMethods",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "description"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "observation": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "disabled",
                        "expired"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Link de pagamento inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.get"
            ]
          }
        ]
      },
      "put": {
        "operationId": "PaymentLinksController_updatePaymentLink",
        "summary": "Atualizar link de pagamento",
        "description": "Atualiza os dados de um link de pagamento.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "description":"descricao do link de pagamento",
                    "type": "string",
                    "maxLength": 255
                  },
                  "items": {
                    "description": "Informações do produto",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 255,
                          "description": "Nome do Produto"
                        },
                        "quantity": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Quantidade"
                        },
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Valor unitário do produto"
                        }
                      },
                      "required": [
                        "name",
                        "quantity",
                        "value"
                      ]
                    },
                    "minItems": 1
                  },
                  "expirationDate": {
                    "description": "Data para expirar o link de pagamento ",
                    "type": "string",
                    "format": "date-time"
                  },
                  "quantity": {
                    "description": "Quantidade de utilização ( contabiliza as faturas pagas ) ",
                    "type": "number",
                    "format": "float",
                    "minimum": 1
                  },
                  "paymentMethods": {
                    "description": "Métodos de pagamento,cartão de crédito, boleto, pix. Repassar no cartão de créditos o parâmetro maxParcels",
                    "type": "object",
                    "properties": {
                      "pix": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "boleto": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "dueDateDays": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "creditCard": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "maxParcels": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "interestFreeUntil": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "monthlyInterest": {
                            "type": "integer",
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      }
                    },
                    "required": [
                      "pix",
                      "boleto",
                      "creditCard"
                    ]
                  },
                  "notifications": {
                    "description": "Habilitar ou desabilitar notificações",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "True para habilitar False para desabilitar" 
                      },
                      "channels": {
                        "description": "Canais de notificação ",
                            "type": "object",
                            "properties": {
                              "sms": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de SMS"
                              },
                              "email": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de e-mail"
                              },
                              "whatsApp": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Canail de whatsApp"
                              }
                            },
                            "required": [
                              "sms",
                              "email",
                              "whatsApp"
                            ],
                            "x-required": true
                      },
                      "types": {
                        "description": "Configurações de disparo da notificação",
                            "type": "object",
                            "properties": {
                              "invoiceCreate": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação quando a fatura for criada"
                              },
                              "daysBeforeExpiration3": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação 3 dias antes da fatura vencer"
                              },
                              "expirationDay": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação no dia de expiração"
                              },
                              "invoicePaid": {
                                "enum": [
                                  "true",
                                  "false"
                                ],
                                "type": "boolean",
                                "description": "Enviar notificação quando a fatura for paga "
                            
                              }
                            },
                            "required": [
                              "invoiceCreate",
                              "daysBeforeExpiration3",
                              "expirationDay",
                              "invoicePaid"
                            ],
                            "x-required": true
                          }

                    },
                    "required": [
                      "enable"
                    ]
                  },
                  "split": {
                    "type": "object",
                    "properties": {
                      "taxationMode": {
                        "type": "string",
                        "enum": [
                          "onlyPrimary"
                        ]
                      },
                      "recipients": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cpfCnpj": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "x-required": true
                                }
                              ]
                            },
                            "commission": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "fixedValue",
                                    "percentage"
                                  ]
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1
                                }
                              },
                              "required": [
                                "type",
                                "value"
                              ]
                            }
                          },
                          "required": [
                            "cpfCnpj",
                            "commission"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 10
                      }
                    },
                    "required": [
                      "taxationMode",
                      "recipients"
                    ]
                  },
                  "cancelOverdue": {
                    "enum": [
                      true,
                      false
                    ],
                    "type": "boolean",
                    "description": "Cancelar a fatura quando a mesma vencer, passe true para cancelar"
                  },
                  "cancelOverdueDays": {
                    "type": "number",
                    "format": "float",
                    "minimum": 1,
                    "maximum": 60,
                    "description": "Determinar dias para o cancelamento da fatura após vencimento"
                  },
                  "mulctAndInterest": {
                    "description": "Configurar multa e juros",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "description": "Deseja criar configuração de multa e juros",
                        "type": "boolean",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "mulct": {
                        "description": "Multa após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "interest": {
                        "description": "Juros diário após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "enable"
                    ]
                  },
                  "observation": {
                    "description":"Você pode inserir também uma observação, com ate 300 caracteres ",
                    "type": "string",
                    "maxLength": 300
                  }
                },
                "required": [
                  "description",
                  "items",
                  "paymentMethods"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description":"Identificador unico do link de pagamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLink",
                  "required": [
                    "paymentMethods",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "description"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "observation": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "disabled",
                        "expired"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.update"
            ]
          }
        ]
      }
    },
    "/v1/payment_links/{id}/active": {
      "put": {
        "operationId": "PaymentLinksController_activePaymentLink",
        "summary": "Ativar link de pagamento",
        "description": "Ativa um link de pagamento.",
        "parameters": [
          {
            "name": "id",
            "description":"Identificador unico do link de pagamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLink",
                  "required": [
                    "paymentMethods",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "description"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "observation": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "disabled",
                        "expired"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.activate"
            ]
          }
        ]
      }
    },
    "/v1/payment_links/{id}/disable": {
      "put": {
        "operationId": "PaymentLinksController_disablePaymentLink",
        "summary": "Desativar link de pagamento",
        "description": "desativa um link de pagamento.",
        "parameters": [
          {
            "name": "id",
            "description":"Identificador unico do link de pagamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLink",
                  "required": [
                    "paymentMethods",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "description"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "cancelOverdueDays": {
                      "type": "number"
                    },
                    "observation": {
                      "type": "string"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "disabled",
                        "expired"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.disable"
            ]
          }
        ]
      }
    },
    "/v1/payment_links/{id}/details": {
      "get": {
        "operationId": "PaymentLinksController_getDetails",
        "summary": "Detalhes das faturas do link de pagamento",
        "description": "Retorna detalhamento das faturas gerados pelo link de pagamento",
        "parameters": [
          {
            "name": "id",
            "description":"Identificador unico do link de pagamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countInvoices": {
                      "type": "number"
                    },
                    "paid": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    },
                    "waitingPayment": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Link de pagamento inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.get"
            ]
          }
        ]
      }
    },



    "/v1/products": {
      "post": {
        "operationId": "ProductsController_createProduct",
        "summary": "Criar produto",
        "description": "Adiciona um novo produto ao catálogo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "nome do produto",
                    "type": "string",
                    "maxLength": 40
                  },
                  "value": {
                    "type": "integer",
                    "description": "valor do produto",
                    "minimum": 200,
                    "maximum": 1500000
                  }
                },
                "required": [
                  "name",
                  "value"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "required": [
                    "value",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Produto já cadastrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Produto já cadastrado"
                    },
                    "error": {
                      "type": "string",
                      "example": "Conflict"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.create"
            ]
          }
        ]
      },
      "get": {
        "operationId": "ProductsController_listProducts",
        "summary": "Listar produtos",
        "description": "Lista produtos do beneficiário, aceita filtros, ordenação e paginação.",
        "parameters": [
          {
            "name": "x-cloud-trace-context",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "description": "nome a ser pesquisado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "description": "data inicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "description": "data final",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "description": "pagina atual",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "description": "Quantidade de resultado por pagina",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "sortField",
            "description": "campo de classificação",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "description": "ordem de classificação",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.get"
            ]
          }
        ]
      }
    },
    "/v1/products/import": {
      "post": {
        "operationId": "ProductsController_importProducts",
        "summary": "Importar produtos",
        "description": "Recebe um csv e importa para base de produtos, [modelo .csv](https://storage.googleapis.com/lypag-static/modelo-importacao-produtos.csv)<br/><br/>\n    *Esta requisicão poderá ser movida para segundo plano caso os servidores estejam sob alta demanda, uma resposta 202 será enviada caso a requisicão seja movida para segundo plano e uma notficação será enviada ao finalizar a importação.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "arquivo com produtos para importar",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "clientId",
                      "subscriptionId"
                    ],
                    "properties": {
                      "productId": {
                        "type": "string",
                        "example": "6101ac11f99c2556e2877e4f"
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Processando",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "import_started"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Arquivo inválido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Arquivo inválido",
                        "Erro ao processar a linha: 1"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.import"
            ]
          }
        ]
      }
    },
    "/v1/products/autocomplete": {
      "get": {
        "operationId": "ProductsController_autocompleteProducts",
        "summary": "Autocomplete produtos",
        "description": "Retorna dados do produtos com base em uma pesquisa",
        "parameters": [
          {
            "name": "search",
            "description": "nome do produto",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.get"
            ]
          }
        ]
      }
    },
    "/v1/products/{id}": {
      "get": {
        "operationId": "ProductsController_getProduct",
        "summary": "Detalhes do produto",
        "description": "Retorna detalhamento de um produto",
        "parameters": [
          {
            "name": "id",
            "description": "Identificar unico do produto",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "required": [
                    "value",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Produto inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.get"
            ]
          }
        ]
      },
      "put": {
        "operationId": "ProductsController_updateProduct",
        "summary": "Atualiza produto",
        "description": "Atualiza dados de um produto",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description":"nome do produto",
                    "type": "string",
                    "maxLength": 255
                  },
                  "value": {
                    "type": "integer",
                    "description":"valor do produto",
                    "minimum": 200,
                    "maximum": 1500000
                  }
                },
                "required": [
                  "name",
                  "value"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Identificar unico do produto",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "required": [
                    "value",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Produto inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Produto já cadastrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Produto já cadastrado"
                    },
                    "error": {
                      "type": "string",
                      "example": "Conflict"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.update"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "ProductsController_deleteProduct",
        "summary": "Remove produto",
        "description": "Remove um produto",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "required": [
                    "value",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Produto inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.delete"
            ]
          }
        ]
      }
    },
    "/v1/wallet": {
      "get": {
        "operationId": "WalletController_getWalletInfo",
        "summary": "Detalhes da carteira",
        "description": "Retorna os dados da carteira do beneficiário.",
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "number"
                    },
                    "futureBalance": {
                      "type": "number"
                    },
                    "minimumWithdrawal": {
                      "type": "number"
                    },
                    "currentTax": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Carteira"
        ],
        "security": [
          {
            "lytexAuth": [
              "wallet.get"
            ]
          }
        ]
      }
    },
    "/v1/wallet/withdraw": {
      "post": {
        "operationId": "WalletController_createWithdrawSolicitation",
        "summary": "Criar solicitação de saque",
        "description": "Cria uma nova solicitação de saque do beneficiário",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "_bankAccountId": {
                    "type": "string"
                  }
                },
                "required": [
                  "amount",
                  "_bankAccountId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "WithdrawSolicitation",
                  "required": [
                    "comment",
                    "status",
                    "taxes",
                    "amount",
                    "bankAccount",
                    "_recipientId"
                  ],
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "waiting_approval",
                        "approved",
                        "rejected",
                        "reproved",
                        "released"
                      ]
                    },
                    "taxes": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "bankAccount": {
                      "type": "object",
                      "properties": {
                        "account": {
                          "type": "object",
                          "properties": {
                            "operation": {
                              "type": "string"
                            },
                            "dv": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "poupanca",
                                "corrente",
                                "poupancaConjunta",
                                "correnteConjunta"
                              ]
                            }
                          }
                        },
                        "agency": {
                          "type": "object",
                          "properties": {
                            "dv": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            }
                          }
                        },
                        "bank": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "code": {
                              "type": "string"
                            }
                          }
                        },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "cpfCnpj": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "pf",
                                "pj"
                              ]
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Carteira"
        ],
        "security": [
          {
            "lytexAuth": [
              "wallet.createWithdraw"
            ]
          }
        ]
      }
    },
    "/v1/wallet/transactions": {
      "get": {
        "operationId": "WalletController_listWalletTransactions",
        "summary": "Detalhes das transações da carteira",
        "description": "Retorna os dados das transações da carteira do beneficiário.",
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Carteira"
        ],
        "security": [
          {
            "lytexAuth": [
              "wallet.get"
            ]
          }
        ]
      }
    },
    "/v1/wallet/transactions/resume": {
      "get": {
        "operationId": "WalletController_getWalletTransactionsResume",
        "summary": "Resumo das transações da carteira",
        "description": "Retorna os dados do resumo da carteira do beneficiário.",
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "in": {
                      "type": "number"
                    },
                    "out": {
                      "type": "number"
                    },
                    "taxes": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Carteira"
        ],
        "security": [
          {
            "lytexAuth": [
              "wallet.get"
            ]
          }
        ]
      }
    }
  },
  "info": {
    "title": "Lytex Pagamentos API",
    "description": "A LyTex Pagamentos é uma Fintech com foco na potencialização de resultados em empresas, atuando com meios de pagamentos digitais. Somos reconhecidos pela excelência na entrega de soluções específicas para aceleração de crescimento por meio da tecnologia e inovação estratégica. Tornamos a gestão financeira da sua empresa mais eficiente com nossas soluções. Automatizamos seus processos de recebimentos únicos ou recorrentes, aumentando a produtividade do seu negócio. Temos a certificação internacional PCI-DSS de segurança, garantindo mais confiança e eficiência nas suas transações.\n\nOferecemos aos desenvolvedores uma API simples e poderosa, para integrar pagamentos por boleto e PIX em seu site ou aplicação. Antes de prosseguir e necessário cria uma conta em nosso sistema. \n\nNão tem conta? <img src='/images/icons/help-circle.svg'/>\n\n<a style='border: 1px solid rgb(0, 76, 255); padding: 9px 10px; border-radius: 8px; font-family: Ubuntu; font-style: normal; font-weight: 500; font-size: 12px; line-height: 150%; color: #FFFFFF; text-decoration: none; background: rgb(0, 76, 255);' href='https://pay.lytex.com.br/auth/registration' target='_blank'>ABRIR CONTA AGORA</a>\n\n <!-- <img style='border-radius: 12px; box-shadow: 0px 10px 15px -3px rgb(0 0 0 / 10%);' src='https://lytex.com.br/wp-content/uploads/2023/01/2022-08-01.webp' /> \n\n### Pré-requisitos\n- Ter uma conta no sistema da Lytex.  <a href='https://pay.lytex.com.br/auth/registration' target='_blank'>Criar conta</a>\n- Ter todos os documentos aprovados \n\n### O que fazer com a nossa API \n\nAPI de Pagamentos desenvolvida para simplificar sua vida. Com poucos cliques, você conhecerá os endpoints que farão sentido para seu negócio. A gente sabe que seu tempo é precioso! Por isso, deixamos tudo pronto para você. É só acessar clicando no botão abaixo e ver como é simples integrar com a gente.\n\n\n\n# Criar primeira cobrança   \n\n\nAgora vamos criar uma integração no painel, ou seja vamos gerar as chaves que vai possibilitar que o nosso método de pagamento seja integrado.  Primeiramente faça o <a href='https://pay.lytex.com.br/auth/login' target='_blank'>login</a> no seu painel, em seguida no menu lateral a esquerda clique em **Configurações**\nlogo em seguida clique em **Integrações**, click em **API**, Preencha os campos com o nome e descrição de sua integração  e click em **Salvar**, e  em seguida vai ser carregada as chaves de sua integração, agora precisamos configurar as permissões desta integração click em **Restringir Acesso** e marque a caixinha **Faturas**, agora e só salvar e pronto, esta configurada a sua integração na plataforma. No [próximo passo](preparing-json-accessToken.md) vamos criar sua primeira fatura.\n\n<video width=\"100%\" height=\"100%\" autoplay loop>\n  <source src=\"https://homologacao-site.lytex.com.br/videos/criando-integracao.mov\" type=\"video/mp4\">\n</video>\n\n\n## Criando token de acesso\n\n  Agora com a integração criada e configurada dentro do painel da lytex vamos utilizar o Postman para gerar o token de acesso e também a primeira fatura, primeiramente e necessário montar o arquivo JSON, como o arquivo abaixo você pode copiar e colar ele no seu Postman. Apos colocar seus dados da integração basta executar e recebera uma resposta de nossa API com um parâmetro chamado **accessToken**, e também receberemos como parâmetros algumas informações referente a esse token. Lembrando que esse token tem a durabilidade de 5min\n  \n  Feito isso e ja tendo o **accessToken** salvo podemos passar para o [próximo passo](create-invoices.md) a geração de faturas\n  \n  \n  Para gerar esse token utilizarmos a rota **/v1/oauth/obtain_token**\n  \n  \n  ```json\n  {\n      \"grantType\": \"clientCredentials\",\n      \"clientId\": \"SEU Client ID\",\n      \"clientSecret\":\"SEU CLIENT SECRET\",\n      \"scopes\": [\n          \"invoice\"\n      ]\n  }\n  ```\n  \n  \n  \n  <video width=\"100%\" height=\"100%\" loop controls>\n    <source src=\"https://homologacao-site.lytex.com.br/videos/criando-token-de-acesso.mov\" type=\"video/mp4\">\n  </video>\n  \n\n## Criando a cobrança\n  \n  Agora sim vamos criar a nossa fatura, vamos começar a montar o arquivo JSON, nele temos varias informações como dados do cliente dados do produto e endereço. Nesta demonstração usaremos somente os dados obrigatório para que a fatura seja criada, mas você pode consultar todos os outros parâmetros [aqui](/openapi/reference/operation/InvoicesController_createInvoice/)\n  \n  \n  Para gerar esse token utilizarmos a rota **/v1/invoices**\n  \n  Nesta requisição vamos passar o parâmetro **Authorization** no header com o valor do token de acesso gerado [anteriormente](preparing-json-accessToken.md)\n  \n  \n  Usando o modo sandbox existes alguns usuário arios fictícios para ser usados, outros dados não será reconhecido pela API\n  \n  ### Dados usuários fictícios\n  <table>\n      <tr>\n          <td>Valerio de Aguiar Zorzato</td>\n          <td>96050176876</td>\n      </tr>\n          <tr>\n          <td>Joao da Costa Antunes  </td>\n          <td>88398158808</td>\n      </tr>\n          <tr>\n          <td>Valerio Alves Barros</td>\n          <td>71943984190</td>\n      </tr>\n          <tr>\n          <td>Joao da Costa Antunes</td>\n          <td>97965940132</td>\n      </tr>\n  \n  </table>\n  \n  \n  Bearer\n  \n  ```json\n  {\n      \"client\": {\n          \"treatmentPronoun\": \"you\",\n          \"name\": \"Valerio de Aguiar Zorzato\",\n          \"type\": \"pf\",\n          \"cpfCnpj\": \"96050176876\",\n          \"email\": \"valerio@gmail.com\",\n          \"cellphone\": \"78798798798\",\n          \"address\": {\n  \n              \"zip\": \"35170128\",\n              \"city\": \"Coronel Fabriciano\",\n              \"street\": \"Rua Doutor Moacir Byrro\",\n              \"state\": \"MG\",\n              \"zone\": \"Centro\"\n          }\n      },\n      \"items\": [\n          {\n              \"name\": \"Notebook A315-58-573p I5 8gb 256gb Ssd 15,6\",\n              \"quantity\": 1,\n              \"value\": 279900\n          }\n  \n      ],\n      \"dueDate\": \"2023-12-30T23:59:59.999Z\",\n      \"paymentMethods\": {\n          \"pix\": {\n              \"enable\": true\n          },\n          \"boleto\": {\n              \"enable\": true\n          },\n          \"creditCard\": {\n              \"enable\": false\n          }\n      },\n      \"notifications\":{\n          \"enable\": false,\n          \"channels\":{\n              \"sms\":false,\n              \"email\":true,\n              \"whatsApp\":false\n          },\n          \"types\":{\n              \"daysBeforeExpiration3\":true,\n              \"expirationDay\":true,\n              \"invoiceCreate\":true,\n              \"invoicePaid\":true\n          }\n      },\n      \"cancelOverdue\": false\n  }\n  ```\n  \n  <video width=\"100%\" height=\"100%\" loop controls>\n    <source src=\"https://homologacao-site.lytex.com.br/videos/criar-fatura.mov\" type=\"video/mp4\">\n  </video>",
    "version": "1.0.0",
    "contact": {
      "name": "Lytex",
      "url": "https://lytex.com.br",
      "email": "suporte@lytex.com.br"
    }
  },
  "servers": [
    {
      "url": "https://api-pay.lytex.com.br",
      "description": "Produção"
    },
    {
      "url": "https://sandbox-api-pay.lytex.com.br",
      "description": "Sandbox"
    }
  ],
  "components": {
    "securitySchemes": {
      "lytexAuth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth-pay.lytex.com.br/v1/oauth/obtain_token",
            "refreshUrl": "https://auth-pay.lytex.com.br/v1/oauth/obtain_token",
            "scopes": {
              "invoice": "invoice",
              "invoice_create": "invoice.create",
              "invoice_get": "invoice.get",
              "invoice_update": "invoice.update",
              "invoice_cancel": "invoice.cancel",
              "invoice_refund": "invoice.refund",
              "client": "client",
              "client_create": "client.create",
              "client_get": "client.get",
              "client_update": "client.update",
              "client_delete": "client.delete",
              "client_import": "client.import",
              "subscription": "subscription",
              "subscription_get": "subscription.get",
              "subscription_create": "subscription.create",
              "subscription_update": "subscription.update",
              "subscription_cancel": "subscription.cancel",
              "receivable": "receivable",
              "receivable_get": "receivable.get",
              "paymentLink": "paymentLink",
              "paymentLink_create": "paymentLink.create",
              "paymentLink_get": "paymentLink.get",
              "paymentLink_update": "paymentLink.update",
              "paymentLink_activate": "paymentLink.activate",
              "paymentLink_disable": "paymentLink.disable",
              "product": "product",
              "product_get": "product.get",
              "product_create": "product.create",
              "product_import": "product.import",
              "product_update": "product.update",
              "product_delete": "product.delete",
              "wallet": "wallet",
              "wallet_get": "wallet.get",
              "wallet_createWithdraw": "wallet.createWithdraw"
            }
          }
        }
      }
    },
    "schemas": {}
  }
}
