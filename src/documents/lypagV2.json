{
  "openapi": "3.0.0",
  "tags": [
    {
      "name": "Clientes",
      "description": "Na aba Clientes, você tem diversas opções disponíveis para gerir sua carteira de clientes com mais facilidade e otimizar suas operações. Você pode cadastrar seus clientes para facilitar a emissão de faturas, recorrências e links de pagamento. Além disso, pode listar clientes para possibilitar consultas detalhadas e importar clientes do seu banco de dados.  "
    },
    {
      "name": "Régua de cobrança",
      "description": "Na aba de Régua de Cobrança, é possível criar vários modelos de notificações para suas cobranças. Esses modelos podem ser usados para automatizar o processo de envio de lembretes e comunicações aos clientes em diferentes estágios da régua de cobrança."
    },
    {
      "name": "Assinaturas",
      "description": "As assinaturas ou a recorrência são uma ótima maneira de fidelizar clientes e ter mais previsibilidade de caixa. Configurar esse tipo de cobrança do jeito que o seu negócio precisa é bem simples via API. Esse processo consiste em criar planos, nos quais são definidos os detalhes dessa cobrança, como periodicidade e produtos ou serviços atrelados a eles. Após definir as regras, em Criação de Assinatura, você cria uma cobrança para os clientes, seguindo as especificações do plano."
    },
    {
      "name": "Faturas",
      "description": "Cria faturas e cobranças para clientes com a possibilidade de pagamento tanto pela linha digitável do boleto bancário quanto pelo Pix, com o Boleto Turbinado."
    },
    {
      "name": "Recebíveis",
      "description": "Fornece acesso a todos as transações e pagamentos a receber. Apresenta o saldo atual e o saldo futuro após a compensação dos pagamentos. "
    },
    {
      "name": "Links de Pagamento",
      "description": "Cria, ativa, detalha e atualiza links de pagamento para cobrança rápida por meio de boleto bancário e/ou Pix. Esses links de pagamento podem ser configurados pela periodicidade ou pela quantidade de cobranças emitidas."
    },
    {
      "name": "Produtos",
      "description": "Cadastra seus produtos em um catálogo e facilita a criação de faturas, recorrências e links de pagamento."
    },
    {
      "name": "Carteira",
      "description": "Na carteira, o usuário tem acesso ao seu saldo detalhado, incluindo informações sobre Saldo Atual, Saldo Futuro e Saldo Bloqueado (Split). Acesse todos os dados referentes a entradas e saídas de valores do seu negócio e confira detalhadamente suas transações. Emita o extrato por período e acesse todos os dados relevantes sobre seu faturamento. Solicite o saque dos valores disponíveis no Saldo Atual e receba na conta bancária cadastrada."
    },
    {
      "name": "Parcelamentos",
      "description": "A função de Parcelamento/Carnê de faturas. No Sistema no menu lateral esquerdo, em Vendas, na aba Parcelamento. Ao criar um parcelamento, serão emitidas todas as faturas correspondentes à quantidade de parcelas selecionadas, com o vencimento mensal no dia escolhido na primeira parcela. \n\n Poderão ser selecionadas todas as possíveis configurações de uma emissão de fatura, exceto a opção de parcelamento com mais de 1x no cartão de crédito. \n\n Os parcelamentos criados terão um código próprio de geração e ficarão na aba Parcelamentos. As faturas geradas através de um parcelamento são exibidas na aba Faturas, e o parcelamento que gerou as faturas está na aba Parcelamentos. Será possível acompanhar o andamento de todas as faturas de um parcelamento pela grade de exibição. \n\n Os parcelamentos gerados possuem filtros, que pode-se filtrar por nome do parcelamento, código do parcelamento, nome ou CPF/CNPJ do cliente, data de início e fim de criação, por status ativo ou cancelado"
    }
  ],
  "paths": {
    "/v1/clients": {
      "post": {
        "operationId": "ClientsController_createClient",
        "summary": "Criar cliente",
        "description": "Adiciona um novo cliente à base de clientes. Os dados do cliente podem ser usados para criar faturas, recorrências ou parcelamentos",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "pf",
                      "pj"
                    ],
                    "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Nome completo do cliente"
                  },
                  "treatmentPronoun": {
                    "type": "string",
                    "enum": [
                      "you",
                      "mr",
                      "lady"
                    ],
                    "description": "Saudação preferida<br/><br/>\n      you = Neutro<br/>\n      mr = Senhor<br/>\n      lady = Senhora"
                  },
                  "cpfCnpj": {
                    "type": "string",
                    "minLength": 11,
                    "maxLength": 14,
                    "description": "CPF ou CNPJ do cliente, somente números"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255,
                    "description": "Email do cliente"
                  },
                  "cellphone": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 11,
                    "description": "Número do celular do cliente, somente números, pode ser informado com ou sem digito 9"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "street": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Endereço do cliente rua/logradouro"
                      },
                      "zone": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Bairro/localidade"
                      },
                      "city": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Cidade"
                      },
                      "state": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "description": "Sigla do estado"
                      },
                      "number": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "description": "Número"
                      },
                      "complement": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "description": "Complemento"
                      },
                      "zip": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 8,
                        "description": "Cep/código postal, apenas números"
                      }
                    },
                    "required": [
                      "street",
                      "zone",
                      "city",
                      "state",
                      "zip"
                    ],
                    "description": "Informar o endereço do cliente"
                  }
                },
                "required": [
                  "type",
                  "name",
                  "cpfCnpj",
                  "email",
                  "cellphone"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Client",
                  "required": [
                    "address",
                    "cellphone",
                    "email",
                    "cpfCnpj",
                    "type",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "zip": {
                          "type": "string"
                        },
                        "complement": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "zone": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        }
                      }
                    },
                    "cellphone": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "cpfCnpj": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "pf",
                        "pj"
                      ]
                    },
                    "treatmentPronoun": {
                      "type": "string",
                      "enum": [
                        "you",
                        "mr",
                        "lady"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Cliente já cadastrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Cliente já cadastrado"
                    },
                    "error": {
                      "type": "string",
                      "example": "Conflict"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.create"
            ]
          }
        ]
      },
      "get": {
        "operationId": "ClientsController_listClients",
        "summary": "Listar clientes",
        "description": "Lista clientes do beneficiário. Aceita filtros, ordenação e paginação.<br/> Use \"|\" como separador, caso deseje passar vários valores nos campos: **clientTypes**",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Nome, CPF ou E-mail do cliente que deseja pesquisar"
          },
          {
            "name": "clientTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pf",
                "pj"
              ]
            },
            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Data Inicial"
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Data Final"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Página atual"
          },
          {
            "name": "perPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Quantidade de itens por página"
          },
          {
            "name": "sortField",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Campo de classificação"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              ]
            },
            "description": "Ordenar resposta"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "pf",
                              "pj"
                            ]
                          },
                          "cpfCnpj": {
                            "type": "string"
                          },
                          "cellphone": {
                            "type": "string"
                          },
                          "treatmentPronoun": {
                            "type": "string",
                            "enum": [
                              "you",
                              "mr",
                              "lady"
                            ]
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.get"
            ]
          }
        ]
      }
    },
    "/v1/clients/import": {
      "post": {
        "operationId": "ClientsController_importClients",
        "summary": "Importar clientes",
        "description": "Recebe um modelo .csv e importa para base de clientes. [modelo .csv](https://storage.googleapis.com/lypag-static/modelo-importacao-clientes.csv)<br/>\n    Esta requisição poderá ser movida para segundo plano, caso os servidores estejam sob alta demanda. Uma resposta 202 será enviada, caso a requisição seja movida para segundo plano e uma notificação será enviada ao finalizar a importação.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Arquivo com os clientes que deseja importar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "clientId",
                      "subscriptionId"
                    ],
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "example": "6101ac11f99c2556e2877e4f"
                      },
                      "subscriptionId": {
                        "type": "string",
                        "example": "6101aeae1166cc57481c0025"
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Processando",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "import_started"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Arquivo inválido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Arquivo inválido",
                        "Erro ao processar a linha: 1"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.import"
            ]
          }
        ]
      }
    },
    "/v1/clients/autocomplete": {
      "get": {
        "operationId": "ClientsController_autocompleteClients",
        "summary": "Autocomplete clientes",
        "description": "Retorna dados do cliente com base em uma pesquisa.",
        "parameters": [
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Nome do cliente a ser pesquisado"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "pf",
                          "pj"
                        ]
                      },
                      "treatmentPronoun": {
                        "type": "string",
                        "enum": [
                          "you",
                          "mr",
                          "lady"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.get"
            ]
          }
        ]
      }
    },
    "/v1/clients/{id}": {
      "get": {
        "operationId": "ClientsController_getClient",
        "summary": "Detalhes do cliente",
        "description": "Retorna detalhamento dos dados registrados de um cliente.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Identificador unico ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Client",
                  "required": [
                    "address",
                    "cellphone",
                    "email",
                    "cpfCnpj",
                    "type",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "zip": {
                          "type": "string"
                        },
                        "complement": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "zone": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        }
                      }
                    },
                    "cellphone": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "cpfCnpj": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "pf",
                        "pj"
                      ]
                    },
                    "treatmentPronoun": {
                      "type": "string",
                      "enum": [
                        "you",
                        "mr",
                        "lady"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Cliente inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.get"
            ]
          }
        ]
      },
      "put": {
        "operationId": "ClientsController_updateClient",
        "summary": "Atualiza cliente",
        "description": "Atualiza dados de um cliente",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "pf",
                      "pj"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Nome do cliente"
                  },
                  "treatmentPronoun": {
                    "type": "string",
                    "enum": [
                      "you",
                      "mr",
                      "lady"
                    ],
                    "description": "Como gostaria de ser tratado você, senhor, senhora"
                  },
                  "cpfCnpj": {
                    "anyOf": [
                      {
                        "type": "string",
                        "x-required": true
                      }
                    ],
                    "description": "CPF ou CNPJ do cliente "
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255,
                    "description": "E-mail do cliente "
                  },
                  "cellphone": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 11,
                    "description": "Telefone do cliente "
                  },
                  "address": {
                    "type": "object",
                    "description": "Endereço do cliente",
                    "properties": {
                      "street": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Rua/logradouro"
                      },
                      "zone": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Bairro/localidade"
                      },
                      "city": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Cidade"
                      },
                      "state": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2,
                        "description": "Sigla do estado"
                      },
                      "number": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "description": "Número"
                      },
                      "complement": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true,
                        "description": "Complemento"
                      },
                      "zip": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 8,
                        "description": "Cep/código postal, apenas números"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Client",
                  "required": [
                    "address",
                    "cellphone",
                    "email",
                    "cpfCnpj",
                    "type",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "zip": {
                          "type": "string"
                        },
                        "complement": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "zone": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        }
                      }
                    },
                    "cellphone": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "cpfCnpj": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "pf",
                        "pj"
                      ]
                    },
                    "treatmentPronoun": {
                      "type": "string",
                      "enum": [
                        "you",
                        "mr",
                        "lady"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Cliente inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.update"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "ClientsController_deleteClient",
        "summary": "Remove cliente",
        "description": "Remove um cliente do banco de dados cadastrado.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Identificador unico do cliente ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Client",
                  "required": [
                    "address",
                    "cellphone",
                    "email",
                    "cpfCnpj",
                    "type",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "zip": {
                          "type": "string"
                        },
                        "complement": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "zone": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        }
                      }
                    },
                    "cellphone": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "cpfCnpj": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "pf",
                        "pj"
                      ]
                    },
                    "treatmentPronoun": {
                      "type": "string",
                      "enum": [
                        "you",
                        "mr",
                        "lady"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Cliente inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Clientes"
        ],
        "security": [
          {
            "lytexAuth": [
              "client.delete"
            ]
          }
        ]
      }
    },
    "/v1/subscriptions": {
      "post": {
        "operationId": "SubscriptionsController_createSubscription",
        "summary": "Criar Assinatura",
        "description": "Cria uma assinatura ou cobrança recorrente para um cliente cadastrado.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_clientId": {
                        "type": "string",
                        "description": "Identificador unico ID"
                      },
                      "items": {
                        "description": "Informações do produto",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "Nome do Produto"
                            },
                            "quantity": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Quantidade"
                            },
                            "value": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Valor unitário do produto"
                            }
                          },
                          "required": [
                            "name",
                            "quantity",
                            "value"
                          ]
                        },
                        "minItems": 1
                      },
                      "recurrence": {
                        "description": "Repassar forma de cobrança, se será mensal ou anual, próxima fatura a ser gerada, o dia a ser gerado e a quantidade de dias para o vencimento.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "monthly"
                            ],
                            "description": "Tipo de Cobrança mensal ou anual"
                          },
                          "day": {
                            "type": "number",
                            "format": "float",
                            "minimum": 1,
                            "maximum": 28,
                            "description": "Dia que sera gerada a próxima fatura"
                          },
                          "dueDateDays": {
                            "type": "number",
                            "format": "float",
                            "minimum": 1,
                            "maximum": 15,
                            "description": "Dia de vencimento das faturas geradas"
                          },
                          "nextAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Data da próxima fatura a ser gerada"
                          }
                        },
                        "required": [
                          "type",
                          "day",
                          "dueDateDays"
                        ]
                      },
                      "duration": {
                        "description": "Duração da recorrência",
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string",
                            "enum": [
                              "months",
                              "years",
                              "infinity"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "integer",
                                "minimum": 1,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "unit"
                        ]
                      },
                      "paymentMethods": {
                        "description": "Métodos de pagamento, cartão de crédito, boleto, pix. Repassar no cartão de crédito o parâmetro maxParcels",
                        "type": "object",
                        "properties": {
                          "pix": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "dueDateDays": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "creditCard": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "maxParcels": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "interestFreeUntil": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "monthlyInterest": {
                                "type": "integer",
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          }
                        },
                        "required": [
                          "pix",
                          "boleto",
                          "creditCard"
                        ]
                      },
                      "_billingRuleId": {
                        "type": "string",
                        "description": "Identificador único da régua de cobrança"
                      },
                      "split": {
                        "description": "Para os estabelecimentos a fazer o split (tem que ser solicitado previamente no site)",
                        "type": "object",
                        "properties": {
                          "taxationMode": {
                            "type": "string",
                            "description": "modo de tributação",
                            "enum": [
                              "onlyPrimary"
                            ]
                          },
                          "recipients": {
                            "description": "Dados do destinatários",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpfCnpj": {
                                  "type": "string",
                                  "description": "CPF/CNPJ do destinatários"
                                },
                                "commission": {
                                  "description": "Configurar a comissão",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "fixedValue",
                                        "percentage"
                                      ],
                                      "description": "Definir se será um valor fixo ou uma porcentagem"
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "O valorem Porcentagem deve ser maior que 0.01 e menor que 99.99.  Já o valor fixo deve ser  maior que 1 "
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ]
                                }
                              },
                              "required": [
                                "cpfCnpj",
                                "commission"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 10
                          }
                        },
                        "required": [
                          "taxationMode",
                          "recipients"
                        ]
                      },
                      "mulctAndInterest": {
                        "description": "Configurar multa e juros",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "description": "Deseja criar configuração de multa e juros",
                            "type": "boolean",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "mulct": {
                            "description": "Multa após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "interest": {
                            "description": "Juros diário após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "observation": {
                        "description": "Você pode inserir também uma observação, com até 300 caracteres",
                        "type": "string",
                        "maxLength": 300
                      }
                    },
                    "required": [
                      "_clientId",
                      "items",
                      "recurrence",
                      "duration",
                      "paymentMethods"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "client": {
                        "description": "Criar um cliente juntamente com a fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "pf",
                              "pj"
                            ],
                            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "description": "Nome completo do cliente"
                          },
                          "treatmentPronoun": {
                            "type": "string",
                            "enum": [
                              "you",
                              "mr",
                              "lady"
                            ],
                            "description": "Saudação preferida<br/><br/>\n      you = Neutro<br/>\n      mr = Senhor<br/>\n      lady = Senhora"
                          },
                          "cpfCnpj": {
                            "type": "string",
                            "minLength": 11,
                            "maxLength": 14,
                            "description": "CPF ou CNPJ do cliente, somente números"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 255,
                            "description": "Email do cliente"
                          },
                          "cellphone": {
                            "type": "string",
                            "minLength": 10,
                            "maxLength": 11,
                            "description": "Número do celular do cliente, somente números, pode ser informado com ou sem digito 9"
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "street": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Rua/logradouro"
                              },
                              "zone": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Bairro/localidade"
                              },
                              "city": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Cidade"
                              },
                              "state": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "description": "Sigla do estado"
                              },
                              "number": {
                                "type": "string",
                                "maxLength": 255,
                                "nullable": true,
                                "description": "Número"
                              },
                              "complement": {
                                "type": "string",
                                "maxLength": 255,
                                "nullable": true,
                                "description": "Complemento"
                              },
                              "zip": {
                                "type": "string",
                                "minLength": 8,
                                "maxLength": 8,
                                "description": "Cep/código postal, apenas números"
                              }
                            },
                            "required": [
                              "street",
                              "zone",
                              "city",
                              "state",
                              "zip"
                            ],
                            "description": "Endereço do cliente"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "cpfCnpj",
                          "email",
                          "cellphone"
                        ]
                      },
                      "items": {
                        "description": "Informações do produto",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "Nome do Produto"
                            },
                            "quantity": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Quantidade"
                            },
                            "value": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Valor unitário do produto"
                            }
                          },
                          "required": [
                            "name",
                            "quantity",
                            "value"
                          ]
                        },
                        "minItems": 1
                      },
                      "recurrence": {
                        "description": "Repassar forma de cobrança, se será mensal ou anual, próxima fatura a ser gerada, o dia a ser gerado e a quantidade de dias para o vencimento.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "monthly"
                            ],
                            "description": "Tipo de Cobrança mensal ou anual"
                          },
                          "day": {
                            "type": "number",
                            "format": "float",
                            "minimum": 1,
                            "maximum": 28,
                            "description": "Dia que sera gerada a próxima fatura"
                          },
                          "dueDateDays": {
                            "type": "number",
                            "format": "float",
                            "minimum": 1,
                            "maximum": 15,
                            "description": "Dia de vencimento das faturas geradas"
                          },
                          "nextAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Data da próxima fatura a ser gerada"
                          }
                        },
                        "required": [
                          "type",
                          "day",
                          "dueDateDays"
                        ]
                      },
                      "duration": {
                        "description": "Duração da recorrência",
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string",
                            "enum": [
                              "months",
                              "years",
                              "infinity"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "integer",
                                "minimum": 1,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "unit"
                        ]
                      },
                      "paymentMethods": {
                        "description": "Métodos de pagamento,cartão de crédito, boleto, pix. Repassar no cartão de créditos o parâmetro maxParcels",
                        "type": "object",
                        "properties": {
                          "pix": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "dueDateDays": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "creditCard": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "maxParcels": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "interestFreeUntil": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "monthlyInterest": {
                                "type": "integer",
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          }
                        },
                        "required": [
                          "pix",
                          "boleto",
                          "creditCard"
                        ]
                      },
                      "_billingRuleId": {
                        "type": "string",
                        "description": "Identificador único da régua de cobrança"
                      },
                      "split": {
                        "description": "Para os estabelecimentos a fazer o split (tem que ser solicitado previamente no site)",
                        "type": "object",
                        "properties": {
                          "taxationMode": {
                            "type": "string",
                            "description": "modo de tributação",
                            "enum": [
                              "onlyPrimary"
                            ]
                          },
                          "recipients": {
                            "description": "Dados do destinatários",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpfCnpj": {
                                  "type": "string",
                                  "description": "CPF/CNPJ do destinatários"
                                },
                                "commission": {
                                  "description": "Configurar a comissão",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "fixedValue",
                                        "percentage"
                                      ],
                                      "description": "Definir se será um valor fixo ou uma porcentagem"
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "O valorem Porcentagem deve ser maior que 0.01 e menor que 99.99.  Já o valor fixo deve ser  maior que 1 "
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ]
                                }
                              },
                              "required": [
                                "cpfCnpj",
                                "commission"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 10
                          }
                        },
                        "required": [
                          "taxationMode",
                          "recipients"
                        ]
                      },
                      "mulctAndInterest": {
                        "description": "Configurar multa e juros",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "description": "Deseja criar configuração de multa e juros",
                            "type": "boolean",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "mulct": {
                            "description": "Multa após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "interest": {
                            "description": "Juros diário após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "observation": {
                        "description": "Você pode inserir também uma observação, com ate 300 caracteres ",
                        "type": "string",
                        "maxLength": 300
                      }
                    },
                    "required": [
                      "_clientId",
                      "items",
                      "recurrence",
                      "duration",
                      "paymentMethods"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Subscription",
                  "required": [
                    "paymentMethods",
                    "duration",
                    "recurrence",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "unit": {
                          "type": "string",
                          "enum": [
                            "months",
                            "years",
                            "infinity"
                          ]
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "properties": {
                        "nextAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dueDateDays": {
                          "type": "number"
                        },
                        "day": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "monthly"
                          ]
                        }
                      }
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.create"
            ]
          }
        ]
      },
      "get": {
        "operationId": "SubscriptionsController_listSubscriptions",
        "summary": "Listar assinaturas",
        "description": "Lista assinaturas do beneficiário. Aceita filtros, ordenação e paginação<br/>\n    Use \"|\" como separador, caso deseje passar vários valores nos campos: **clientTypes**, **status**",
        "parameters": [
          {
            "name": "search",
            "description": "Nome que deseja pesquisar ",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pf",
                "pj"
              ]
            },
            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Data Inicial"
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Data Final"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Página atual"
          },
          {
            "name": "perPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Quantidade de itens por página"
          },
          {
            "name": "sortField",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Campo de classificação"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              ]
            },
            "description": "Ordenar resposta"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number"
                                },
                                "quantity": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value",
                                "quantity",
                                "name"
                              ]
                            }
                          },
                          "client": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "object",
                                "properties": {
                                  "zip": {
                                    "type": "string"
                                  },
                                  "complement": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "zone": {
                                    "type": "string"
                                  },
                                  "street": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cellphone": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "cpfCnpj": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "pf",
                                  "pj"
                                ]
                              },
                              "treatmentPronoun": {
                                "type": "string",
                                "enum": [
                                  "you",
                                  "mr",
                                  "lady"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "recurrence": {
                            "type": "object",
                            "properties": {
                              "nextAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "dueDateDays": {
                                "type": "number"
                              },
                              "day": {
                                "type": "number"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "monthly"
                                ]
                              }
                            }
                          },
                          "duration": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "unit": {
                                "type": "string",
                                "enum": [
                                  "months",
                                  "years",
                                  "infinity"
                                ]
                              }
                            }
                          },
                          "totalValue": {
                            "type": "number"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.get"
            ]
          }
        ]
      }
    },
    "/v2/subscriptions/card_token": {
      "post": {
        "operationId": "SubscriptionsController_createSubscription_card_token",
        "summary": "Criar um token de cartão",
        "description": "Criar um token de cartão, este token sera utilizado para efetuar o pagamento de uma fatura",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "cpfCnpj": {
                        "type": "string",
                        "minLength": 11,
                        "maxLength": 14,
                        "description": "CPF ou CNPJ do portador do cartao"
                      },
                      "number": {
                        "description": "Número do cartão",
                        "minLength": 16,
                        "maxLength": 16,
                        "type": "number"
                      },
                      "holder": {
                        "type": "string",
                        "description": "Nome impresso no cartão"
                      },
                      "expiry": {
                        "type": "string",
                        "description": "Expiração do cartão MMYY ou MMYYYY"
                      },
                      "cvc": {
                        "type": "number",
                        "description": "Codigo de segurança"
                      }
                    },
                    "required": [
                      "cpfCnpj",
                      "number",
                      "holder",
                      "expiry",
                      "cvc"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Subscription",
                  "required": [
                    "cpfCnpj",
                    "number",
                    "holder",
                    "expiry",
                    "cvc"
                  ],
                  "properties": {
                    "cpfCnpj": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "brand": {
                      "type": "string"
                    },
                    "operator": {
                      "type": "string"
                    },
                    "validUntil": {
                      "type": "date"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.create"
            ]
          }
        ]
      }
    },
    "/v2/subscriptions/managed/pay": {
      "post": {
        "operationId": "SubscriptionsController_createSubscription_managed_pay",
        "summary": "Pagamento com token do cartao",
        "description": "Efetuar o pagamento de uma fatura com um token de cartao",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_subscriptionCardTokenId": {
                        "type": "string",
                        "description": "ID do cartão tokenizado"
                      },
                      "_invoiceId": {
                        "description": "ID da fatura com recerrencia gerenciada habilitada",
                        "type": "string"
                      }
                    },
                    "required": [
                      "_subscriptionCardTokenId",
                      "_invoiceId"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Subscription",
                  "required": [
                    "cpfCnpj",
                    "number",
                    "holder",
                    "expiry",
                    "cvc"
                  ],
                  "properties": {
                    "cpfCnpj": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "brand": {
                      "type": "string"
                    },
                    "operator": {
                      "type": "string"
                    },
                    "validUntil": {
                      "type": "date"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.create"
            ]
          }
        ]
      }
    },

    "/v1/subscriptions/{id}": {
      "get": {
        "operationId": "SubscriptionsController_getSubscription",
        "summary": "Detalhes da Assinatura",
        "description": "Retorna detalhamento de uma assinatura",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador unico do cliente ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "unit": {
                          "type": "string",
                          "enum": [
                            "months",
                            "years",
                            "infinity"
                          ]
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "properties": {
                        "nextAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dueDateDays": {
                          "type": "number"
                        },
                        "day": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "monthly"
                          ]
                        }
                      }
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Assinatura inválida"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.get"
            ]
          }
        ]
      },
      "put": {
        "operationId": "SubscriptionsController_updateSubscription",
        "summary": "Atualizar Assinatura",
        "description": "Atualiza uma assinatura de um usuário.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "description": "Informações do produto",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 255,
                          "description": "Nome do Produto"
                        },
                        "quantity": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Quantidade"
                        },
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Valor unitário do produto"
                        }
                      },
                      "required": [
                        "name",
                        "quantity",
                        "value"
                      ]
                    },
                    "minItems": 1
                  },
                  "recurrence": {
                    "description": "Repassar forma de cobrança, se será mensal ou anual, próxima fatura a ser gerada, o dia a ser gerado e a quantidade de dias para o vencimento.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "monthly"
                        ],
                        "description": "Tipo de Cobrança mensal ou anual"
                      },
                      "day": {
                        "type": "number",
                        "format": "float",
                        "minimum": 1,
                        "maximum": 28,
                        "description": "Dia que sera gerada a próxima fatura"
                      },
                      "dueDateDays": {
                        "type": "number",
                        "format": "float",
                        "minimum": 1,
                        "maximum": 15,
                        "description": "Dia de vencimento das faturas geradas"
                      },
                      "nextAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Data da próxima fatura a ser gerada"
                      }
                    },
                    "required": [
                      "type",
                      "day",
                      "dueDateDays"
                    ]
                  },
                  "duration": {
                    "description": "Duração da recorrência",
                    "type": "object",
                    "properties": {
                      "unit": {
                        "type": "string",
                        "enum": [
                          "months",
                          "years",
                          "infinity"
                        ]
                      },
                      "value": {
                        "oneOf": [
                          {
                            "type": "integer",
                            "minimum": 1,
                            "x-required": true
                          }
                        ]
                      }
                    },
                    "required": [
                      "unit"
                    ]
                  },
                  "paymentMethods": {
                    "description": "Métodos de pagamento, cartão de crédito, boleto, pix. Repassar no cartão de crédito o parâmetro maxParcels",
                    "type": "object",
                    "properties": {
                      "pix": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "boleto": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "dueDateDays": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "creditCard": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "maxParcels": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "interestFreeUntil": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "monthlyInterest": {
                            "type": "integer",
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      }
                    },
                    "required": [
                      "pix",
                      "boleto",
                      "creditCard"
                    ]
                  },
                  "_billingRuleId": {
                    "type": "string",
                    "description": "Identificador único da régua de cobrança"
                  },
                  "split": {
                    "description": "Para os estabelecimentos a fazer o split (tem que ser solicitado previamente no site)",
                    "type": "object",
                    "properties": {
                      "taxationMode": {
                        "type": "string",
                        "description": "modo de tributação",
                        "enum": [
                          "onlyPrimary"
                        ]
                      },
                      "recipients": {
                        "description": "Dados do destinatários",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cpfCnpj": {
                              "type": "string",
                              "description": "CPF/CNPJ do destinatários"
                            },
                            "commission": {
                              "description": "Configurar a comissão",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "fixedValue",
                                    "percentage"
                                  ],
                                  "description": "Definir se será um valor fixo ou uma porcentagem"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1,
                                  "description": "O valorem Porcentagem deve ser maior que 0.01 e menor que 99.99.  Já o valor fixo deve ser  maior que 1 "
                                }
                              },
                              "required": [
                                "type",
                                "value"
                              ]
                            }
                          },
                          "required": [
                            "cpfCnpj",
                            "commission"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 10
                      }
                    },
                    "required": [
                      "taxationMode",
                      "recipients"
                    ]
                  },
                  "mulctAndInterest": {
                    "description": "Configurar multa e juros",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "description": "Deseja criar configuração de multa e juros",
                        "type": "boolean",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "mulct": {
                        "description": "Multa após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "interest": {
                        "description": "Juros diário após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "enable"
                    ]
                  },
                  "observation": {
                    "description": "Você pode inserir também uma observação, com até 300 caracteres",
                    "type": "string",
                    "maxLength": 300
                  }
                },
                "required": [
                  "items",
                  "recurrence",
                  "duration",
                  "paymentMethods"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Identificador unico do cliente ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Subscription",
                  "required": [
                    "paymentMethods",
                    "duration",
                    "recurrence",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "unit": {
                          "type": "string",
                          "enum": [
                            "months",
                            "years",
                            "infinity"
                          ]
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "properties": {
                        "nextAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dueDateDays": {
                          "type": "number"
                        },
                        "day": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "monthly"
                          ]
                        }
                      }
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.update"
            ]
          }
        ]
      }
    },
    "/v1/subscriptions/cancel/{id}": {
      "put": {
        "operationId": "SubscriptionsController_cancel",
        "summary": "Cancelar recorrência",
        "description": "Cancela uma cobrança recorrente cadastrada para um cliente.",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único do cliente ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Subscription",
                  "required": [
                    "paymentMethods",
                    "duration",
                    "recurrence",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "unit": {
                          "type": "string",
                          "enum": [
                            "months",
                            "years",
                            "infinity"
                          ]
                        }
                      }
                    },
                    "recurrence": {
                      "type": "object",
                      "properties": {
                        "nextAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "dueDateDays": {
                          "type": "number"
                        },
                        "day": {
                          "type": "number"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "monthly"
                          ]
                        }
                      }
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assinaturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "subscription.cancel"
            ]
          }
        ]
      }
    },
    "/v1/invoices": {
      "post": {
        "operationId": "InvoicesController_createInvoice",
        "summary": "Criar fatura",
        "description": "Cria uma fatura para efetuar cobrança de clientes. dfsdfsmndf smdf",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_clientId": {
                        "type": "string",
                        "description": "Identificar único do cliente já cadastrado"
                      },
                      "items": {
                        "description": "Informações do produto",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "Nome do Produto"
                            },
                            "quantity": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Quantidade"
                            },
                            "value": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Valor unitário do produto"
                            }
                          },
                          "required": [
                            "name",
                            "quantity",
                            "value"
                          ]
                        },
                        "minItems": 1
                      },
                      "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Dia de vencimento  da cobrança "
                      },
                      "paymentMethods": {
                        "description": "Métodos de pagamento, cartão de crédito, boleto, pix. Repassar no cartão de crédito o parâmetro maxParcels",
                        "type": "object",
                        "properties": {
                          "pix": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "dueDateDays": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "creditCard": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "maxParcels": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "interestFreeUntil": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "monthlyInterest": {
                                "type": "integer",
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          }
                        },
                        "required": [
                          "pix",
                          "boleto",
                          "creditCard"
                        ]
                      },
                      "split": {
                        "description": "Para os estabelecimentos a fazer o split (tem que ser solicitado previamente no site)",
                        "type": "object",
                        "properties": {
                          "taxationMode": {
                            "type": "string",
                            "description": "modo de tributação",
                            "enum": [
                              "onlyPrimary"
                            ]
                          },
                          "recipients": {
                            "description": "Dados do destinatários",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpfCnpj": {
                                  "type": "string",
                                  "description": "CPF/CNPJ do destinatários"
                                },
                                "commission": {
                                  "description": "Configurar a comissão",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "fixedValue",
                                        "percentage"
                                      ],
                                      "description": "Definir se será um valor fixo ou uma porcentagem"
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "O valorem Porcentagem deve ser maior que 0.01 e menor que 99.99.  Já o valor fixo deve ser  maior que 1 "
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ]
                                }
                              },
                              "required": [
                                "cpfCnpj",
                                "commission"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 10
                          }
                        },
                        "required": [
                          "taxationMode",
                          "recipients"
                        ]
                      },
                      "discount": {
                        "description": "Configurar descontos no pagamento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Escolha o tipo de desconto que deseja aplica Fixo ou Porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "discounts": {
                            "description": "Objetos de configurações, podendo inserir ate 3 objetos de configurações ",
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "maximum": 99,
                                      "description": "Valor do desconto em porcentagem deve ser maior que 1 e menor que 99"
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Data de validade do desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "Valor do desconto fixo deve ser maior que 1"
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Data de validade do desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "_paymentLinkId": {
                        "description": "identificador único do link de pagamento, caso ja esteja criado o link",
                        "type": "string"
                      },
                      "_billingRuleId": {
                        "type": "string",
                        "description": "Identificador único da régua de cobrança"
                      },
                      "referenceId": {
                        "description": "Pode-se inserir um identificador de referência",
                        "type": "string",
                        "maxLength": 150
                      },
                      "mulctAndInterest": {
                        "description": "Configurar multa e juros",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "description": "Deseja criar configuração de multa e juros",
                            "type": "boolean",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "mulct": {
                            "description": "Multa após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "interest": {
                            "description": "Juros diário após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "managedSubscription":{
                        "description": "habilitar a recorrencia gerenciada. Campo não e obrigatório ",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "description": "habilitar recorrencia gerenciada ",
                            "type": "boolean",
                            "value": false,
                            "enum": [
                              true,
                              false
                            ]
                          }
                        },
                        "required": [
                          "disable"
                        ]
                      },
                      "observation": {
                        "description": "Você pode inserir também uma observação, com até 300 caracteres",
                        "type": "string",
                        "maxLength": 300
                      }
                    },
                    "required": [
                      "_clientId",
                      "items",
                      "dueDate",
                      "paymentMethods"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "client": {
                        "description": "Criar um cliente juntamente com a fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "pf",
                              "pj"
                            ],
                            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "description": "Nome completo do cliente"
                          },
                          "treatmentPronoun": {
                            "type": "string",
                            "enum": [
                              "you",
                              "mr",
                              "lady"
                            ],
                            "description": "Saudação preferida<br/><br/>\n      you = Neutro<br/>\n      mr = Senhor<br/>\n      lady = Senhora"
                          },
                          "cpfCnpj": {
                            "type": "string",
                            "minLength": 11,
                            "maxLength": 14,
                            "description": "CPF ou CNPJ do cliente, somente números"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 255,
                            "description": "Email do cliente"
                          },
                          "cellphone": {
                            "type": "string",
                            "minLength": 10,
                            "maxLength": 11,
                            "description": "Número do celular do cliente, somente números, pode ser informado com ou sem digito 9"
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "street": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Rua/logradouro"
                              },
                              "zone": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Bairro/localidade"
                              },
                              "city": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Cidade"
                              },
                              "state": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "description": "Sigla do estado"
                              },
                              "number": {
                                "type": "string",
                                "maxLength": 255,
                                "nullable": true,
                                "description": "Número"
                              },
                              "complement": {
                                "type": "string",
                                "maxLength": 255,
                                "nullable": true,
                                "description": "Complemento"
                              },
                              "zip": {
                                "type": "string",
                                "minLength": 8,
                                "maxLength": 8,
                                "description": "Cep/código postal, apenas números"
                              }
                            },
                            "required": [
                              "street",
                              "zone",
                              "city",
                              "state",
                              "zip"
                            ],
                            "description": "Endereço do cliente"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "cpfCnpj",
                          "email",
                          "cellphone"
                        ]
                      },
                      "items": {
                        "description": "Informações do produto",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "description": "Nome do Produto"
                            },
                            "quantity": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Quantidade"
                            },
                            "value": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Valor unitário do produto"
                            }
                          },
                          "required": [
                            "name",
                            "quantity",
                            "value"
                          ]
                        },
                        "minItems": 1
                      },
                      "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Dia de vencimento  da cobrança "
                      },
                      "paymentMethods": {
                        "description": "Métodos de pagamento,cartão de crédito, boleto, pix. Repassar no cartão de créditos o parâmetro maxParcels",
                        "type": "object",
                        "properties": {
                          "pix": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "dueDateDays": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          },
                          "creditCard": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean"
                              },
                              "maxParcels": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "interestFreeUntil": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "monthlyInterest": {
                                "type": "integer",
                                "maximum": 100
                              }
                            },
                            "required": [
                              "enable"
                            ]
                          }
                        },
                        "required": [
                          "pix",
                          "boleto",
                          "creditCard"
                        ]
                      },
                      "split": {
                        "description": "Para os estabelecimentos a fazer o split (tem que ser solicitado previamente no site)",
                        "type": "object",
                        "properties": {
                          "taxationMode": {
                            "type": "string",
                            "description": "modo de tributação",
                            "enum": [
                              "onlyPrimary"
                            ]
                          },
                          "recipients": {
                            "description": "Dados do destinatários",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpfCnpj": {
                                  "type": "string",
                                  "description": "CPF/CNPJ do destinatários"
                                },
                                "commission": {
                                  "description": "Configurar a comissão",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "fixedValue",
                                        "percentage"
                                      ],
                                      "description": "Definir se será um valor fixo ou uma porcentagem"
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "O valorem Porcentagem deve ser maior que 0.01 e menor que 99.99.  Já o valor fixo deve ser  maior que 1 "
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ]
                                }
                              },
                              "required": [
                                "cpfCnpj",
                                "commission"
                              ]
                            },
                            "minItems": 1,
                            "maxItems": 10
                          }
                        },
                        "required": [
                          "taxationMode",
                          "recipients"
                        ]
                      },
                      "discount": {
                        "description": "Configurar descontos no pagamento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Escolha o tipo de desconto que deseja aplica Fixo ou Porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "discounts": {
                            "description": "Objetos de configurações, podendo inserir ate 3 objetos de configurações ",
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "maximum": 99,
                                      "description": "Valor do desconto em porcentagem deve ser maior que 1 e menor que 99"
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Data de validade do desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "Valor do desconto fixo deve ser maior que 1"
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Data de validade do desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "_paymentLinkId": {
                        "description": "identificador único do link de pagamento, caso ja esteja criado o link",
                        "type": "string"
                      },
                      "_billingRuleId": {
                        "type": "string",
                        "description": "Identificador único da régua de cobrança"
                      },
                      "referenceId": {
                        "description": "Pode-se inserir um identificador de referencia",
                        "type": "string",
                        "maxLength": 150
                      },
                      "mulctAndInterest": {
                        "description": "Configurar multa e juros",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "description": "Deseja criar configuração de multa e juros",
                            "type": "boolean",
                            "enum": [
                              true,
                              false
                            ]
                          },
                          "mulct": {
                            "description": "Multa após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "interest": {
                            "description": "Juros diário após o vencimento da fatura",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Definir se será um valor fixo ou uma porcentagem",
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 1",
                                    "minimum": 1,
                                    "x-required": true
                                  },
                                  {
                                    "type": "object",
                                    "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "x-required": true
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "managedSubscription":{
                        "description": "habilitar a recorrencia gerenciada. Campo não e obrigatório ",
                        "type": "object",
                        "properties": {
                          "enable": {
                            "description": "habilitar recorrencia gerenciada ",
                            "type": "boolean",
                            "value": false,
                            "enum": [
                              true,
                              false
                            ]
                          }
                        },
                        "required": [
                          "disable"
                        ]
                      },
                      "observation": {
                        "description": "Você pode inserir também uma observação, com ate 300 caracteres ",
                        "type": "string",
                        "maxLength": 300
                      }
                    },
                    "required": [
                      "client",
                      "items",
                      "dueDate",
                      "paymentMethods"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invoice",
                  "required": [
                    "rates",
                    "paymentData",
                    "paymentMethods",
                    "dueDate",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "cancelDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "_billingRuleId": {
                          "type": "string",
                          "description": "Identificador único da régua de cobrança"
                        },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "whatsapp": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "sms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentData": {
                      "type": "object",
                      "properties": {
                        "payedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "payedValue": {
                          "type": "number"
                        },
                        "parcels": {
                          "type": "number"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "pix",
                            "boleto",
                            "creditCard",
                            "debitCard"
                          ]
                        },
                        "_transactionId": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "discounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "validUntil": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "value": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "validUntil",
                              "value"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fixedValue",
                            "percentage"
                          ]
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "_applicationId": {
                      "type": "string"
                    },
                    "_paymentLinkId": {
                      "type": "string"
                    },
                    "_subscriptionId": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.create"
            ]
          }
        ]
      },
      "get": {
        "operationId": "InvoicesController_listInvoices",
        "summary": "Listar faturas",
        "description": "Lista faturas do beneficiário, aceita filtros, ordenação e paginação.<br/>   Use \"|\" como separador caso deseje passar vários valores nos campos: **clientTypes**, **status**",
        "parameters": [
          {
            "name": "search",
            "description": "Nome a ser pesquisado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pf",
                "pj"
              ]
            },
            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
          },
          {
            "name": "startDate",
            "description": "Data Inicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "description": "Data final",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "status",
            "description": "status da fatura",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payedStartDate",
            "description": "data de início paga",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "payedEndDate",
            "description": "data final paga",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationStartDate",
            "description": "data de início da criação",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationEndDate",
            "description": "data final da criação",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "exportTo",
            "description": "tipo de resposta",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "xlsx",
                "json"
              ],
              "default": "json"
            }
          },
          {
            "name": "_paymentLinkId",
            "description": "identificador único do link de pagamento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "splitSelected",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "página atual",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "description": "Quantidade de itens por página",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "sortField",
            "description": "campo de classificação",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "description": "Ordenar resposta ",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number"
                                },
                                "quantity": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value",
                                "quantity",
                                "name"
                              ]
                            }
                          },
                          "client": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "object",
                                "properties": {
                                  "zip": {
                                    "type": "string"
                                  },
                                  "complement": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "zone": {
                                    "type": "string"
                                  },
                                  "street": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cellphone": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "cpfCnpj": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "pf",
                                  "pj"
                                ]
                              },
                              "treatmentPronoun": {
                                "type": "string",
                                "enum": [
                                  "you",
                                  "mr",
                                  "lady"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "dueDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "totalValue": {
                            "type": "number"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.get"
            ]
          }
        ]
      }
    },
    "/v1/invoices/split-min-value": {
      "post": {
        "operationId": "InvoicesController_validateMinSplitValue",
        "summary": "Validar valor mínimo para Split",
        "description": "Retorna com o valor mínimo para split. Caso o valor seja menor que o mínimo, o split não será permitido.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "totalValue": {
                    "description": "valor total, maior que 200",
                    "type": "number",
                    "format": "float",
                    "minimum": 200
                  },
                  "taxationMode": {
                    "description": "modo de tributação",
                    "type": "string",
                    "enum": [
                      "onlyPrimary"
                    ]
                  }
                },
                "required": [
                  "taxationMode"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minValue": {
                      "type": "number",
                      "example": 99
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.create"
            ]
          }
        ]
      }
    },
    "/v1/invoices/{id}": {
      "get": {
        "operationId": "InvoicesController_getInvoice",
        "summary": "Detalhes da fatura",
        "description": "Retorna detalhamento da fatura com histórico de transação.",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único da fatura",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "cancelDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "_billingRuleId": {
                          "type": "string",
                          "description": "Identificador único da régua de cobrança"
                        },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "whatsapp": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "sms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentData": {
                      "type": "object",
                      "properties": {
                        "payedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "payedValue": {
                          "type": "number"
                        },
                        "parcels": {
                          "type": "number"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "pix",
                            "boleto",
                            "creditCard",
                            "debitCard"
                          ]
                        },
                        "_transactionId": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "discounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "validUntil": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "value": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "validUntil",
                              "value"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fixedValue",
                            "percentage"
                          ]
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "_applicationId": {
                      "type": "string"
                    },
                    "_paymentLinkId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_id": {
                      "type": "string"
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "requestMetadata": {
                            "type": "object",
                            "properties": {
                              "geolocation": {
                                "type": "object",
                                "properties": {
                                  "accuracy": {
                                    "type": "number"
                                  },
                                  "altitude": {
                                    "type": "number"
                                  },
                                  "longitude": {
                                    "type": "number"
                                  },
                                  "latitude": {
                                    "type": "number"
                                  }
                                }
                              },
                              "ip": {
                                "type": "string"
                              },
                              "userAgent": {
                                "type": "string"
                              }
                            }
                          },
                          "payedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "payedValue": {
                            "type": "number"
                          },
                          "creditCard": {
                            "type": "object",
                            "properties": {
                              "reject": {
                                "type": "object",
                                "properties": {
                                  "reason": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "agent": {
                                    "type": "string",
                                    "enum": [
                                      "lypag",
                                      "cielo",
                                      "brand",
                                      "bank"
                                    ]
                                  }
                                }
                              },
                              "authorizationCode": {
                                "type": "string"
                              },
                              "nsu": {
                                "type": "string"
                              },
                              "tid": {
                                "type": "string"
                              },
                              "paymentId": {
                                "type": "string"
                              },
                              "parcels": {
                                "type": "number"
                              },
                              "receiveType": {
                                "type": "string",
                                "enum": [
                                  "noAdvance",
                                  "advance30days"
                                ]
                              },
                              "_referenceId": {
                                "type": "string"
                              },
                              "operator": {
                                "type": "string"
                              }
                            }
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "dueDate": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "barcode": {
                                "type": "string"
                              },
                              "digitableLine": {
                                "type": "string"
                              },
                              "ourNumber": {
                                "type": "string"
                              },
                              "_referenceId": {
                                "type": "string"
                              },
                              "operator": {
                                "type": "string"
                              }
                            }
                          },
                          "pix": {
                            "type": "object",
                            "properties": {
                              "dueDate": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "qrcode": {
                                "type": "string"
                              },
                              "txId": {
                                "type": "string"
                              },
                              "_referenceId": {
                                "type": "string"
                              },
                              "operator": {
                                "type": "string"
                              }
                            }
                          },
                          "discount": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "validUntil": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "value": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "validUntil",
                                "value"
                              ]
                            }
                          },
                          "interest": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              }
                            }
                          },
                          "mulct": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ]
                              }
                            }
                          },
                          "value": {
                            "type": "number"
                          },
                          "status": {
                            "type": "string"
                          },
                          "paymentMethod": {
                            "type": "string"
                          },
                          "_id": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Fatura inválida"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.get"
            ]
          }
        ]
      },
      "put": {
        "operationId": "InvoicesController_updateInvoice",
        "summary": "Atualizar fatura",
        "description": "Atualiza uma fatura de um determinado cliente.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dueDate": {
                    "description": "Data de Vencimento",
                    "type": "string",
                    "format": "date-time"
                  },
                  "_billingRuleId": {
                    "type": "string",
                    "description": "Identificador único da régua de cobrança"
                  },
                  "observation": {
                    "description": "Você pode inserir também uma observação, com até 300 caracteres",
                    "type": "string",
                    "maxLength": 300
                  },
                  "mulctAndInterest": {
                    "description": "Configurar multa e juros",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "description": "Deseja criar configuração de multa e juros",
                        "type": "boolean",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "mulct": {
                        "description": "Multa após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "interest": {
                        "description": "Juros diário após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "enable"
                    ]
                  }
                },
                "required": [
                  "dueDate"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único da fatura",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invoice",
                  "required": [
                    "rates",
                    "paymentData",
                    "paymentMethods",
                    "dueDate",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "cancelDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "_billingRuleId": {
                          "type": "string",
                          "description": "Identificador único da régua de cobrança"
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentData": {
                      "type": "object",
                      "properties": {
                        "payedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "payedValue": {
                          "type": "number"
                        },
                        "parcels": {
                          "type": "number"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "pix",
                            "boleto",
                            "creditCard",
                            "debitCard"
                          ]
                        },
                        "_transactionId": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "discounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "validUntil": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "value": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "validUntil",
                              "value"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fixedValue",
                            "percentage"
                          ]
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "_applicationId": {
                      "type": "string"
                    },
                    "_paymentLinkId": {
                      "type": "string"
                    },
                    "_subscriptionId": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.update"
            ]
          }
        ]
      }
    },
    "/v1/invoices/email/{id}": {
      "post": {
        "operationId": "InvoicesController_sendMail",
        "summary": "Reenvia Email",
        "description": "Reenvia um e-mail de cobrança com a fatura para o cliente.",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único da fatura",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.create"
            ]
          }
        ]
      }
    },
    "/v1/invoices/cancel/{id}": {
      "put": {
        "operationId": "InvoicesController_cancel",
        "summary": "Cancelar fatura",
        "description": "Cancela uma fatura de um determinado cliente.",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único da fatura",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invoice",
                  "required": [
                    "rates",
                    "paymentData",
                    "paymentMethods",
                    "dueDate",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "cancelDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "_billingRuleId": {
                          "type": "string",
                          "description": "Identificador único da régua de cobrança"
                        },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "whatsapp": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "sms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentData": {
                      "type": "object",
                      "properties": {
                        "payedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "payedValue": {
                          "type": "number"
                        },
                        "parcels": {
                          "type": "number"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "pix",
                            "boleto",
                            "creditCard",
                            "debitCard"
                          ]
                        },
                        "_transactionId": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "discounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "validUntil": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "value": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "validUntil",
                              "value"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fixedValue",
                            "percentage"
                          ]
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "_applicationId": {
                      "type": "string"
                    },
                    "_paymentLinkId": {
                      "type": "string"
                    },
                    "_subscriptionId": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.cancel"
            ]
          }
        ]
      }
    },
    "/v1/invoices/{id}/manual-liquidate": {
      "post": {
        "operationId": "InvoicesController_manualLiquidate",
        "summary": "Pagar fatura (sandbox)",
        "description": "Paga uma fatura de um determinado cliente. Esta operação é apenas para fins de testes.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentMethod": {
                    "type": "string",
                    "enum": [
                      "pix",
                      "boleto",
                      "creditCard",
                      "debitCard"
                    ]
                  },
                  "parcels": {
                    "description": "parcelas a pagar",
                    "oneOf": [
                      {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 12,
                        "x-required": true
                      }
                    ]
                  },
                  "paidValue": {
                    "description": "valor pago",
                    "oneOf": [
                      {
                        "type": "integer",
                        "minimum": 200,
                        "maximum": 5000000,
                        "x-required": true
                      }
                    ]
                  },
                  "paidDate": {
                    "description": "data do pagamento",
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "date-time",
                        "x-required": true
                      }
                    ]
                  }
                },
                "required": [
                  "paymentMethod"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único da fatura",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invoice",
                  "required": [
                    "rates",
                    "paymentData",
                    "paymentMethods",
                    "dueDate",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "client",
                    "_clientId"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "cancelDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "_billingRuleId": {
                          "type": "string",
                          "description": "Identificador único da régua de cobrança"
                        },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "whatsapp": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "sms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentData": {
                      "type": "object",
                      "properties": {
                        "payedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "payedValue": {
                          "type": "number"
                        },
                        "parcels": {
                          "type": "number"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "pix",
                            "boleto",
                            "creditCard",
                            "debitCard"
                          ]
                        },
                        "_transactionId": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "discount": {
                      "type": "object",
                      "properties": {
                        "discounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "validUntil": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "value": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "validUntil",
                              "value"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fixedValue",
                            "percentage"
                          ]
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "_applicationId": {
                      "type": "string"
                    },
                    "_paymentLinkId": {
                      "type": "string"
                    },
                    "_subscriptionId": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Faturas"
        ],
        "security": [
          {
            "lytexAuth": [
              "invoice.create"
            ]
          }
        ]
      }
    },
    "/v1/installment": {
      "post": {
        "operationId": "InstallmentController_createInstallment",
        "summary": "Criar Parcelamento",
        "description": "Cria um parcelamento para um determinado cliente",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_clientId": {
                        "type": "string",
                        "description": "Identificar único do cliente já cadastrado"
                      },
                      "totalValue": {
                        "type": "number",
                        "format": "float",
                        "minimum": 1000,
                        "maximum": 5000000,
                        "description": "Valor total do parcelamento"
                      },
                      "description": {
                        "type": "string",
                        "maxLength": 300,
                        "description": "Descrição do parcelamento, máximo de 300 carácter"
                      },
                      "startAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": " Data de início do parcelamento "
                      },
                      "paymentMethods": {
                        "type": "object",
                        "description": "Método de pagamento do parcelamento",
                        "properties": {
                          "pix": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean",
                                "description": "Habilitar ou desabilitar o pagamento via Pix"
                              }
                            },
                            "required": [
                              "enable"
                            ],
                            "description": "Configuração do Pix"
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean",
                                "description": "Habilitar ou desabilitar o pagamento via Boleto"
                              }
                            },
                            "required": [
                              "enable"
                            ],
                            "description": "Configuração do Boleto"
                          }
                        },
                        "required": [
                          "pix",
                          "boleto"
                        ]
                      },
                      "parcels": {
                        "type": "integer",
                        "description": "Quantidade de parcelas mínimo de 2 e máximo de 119 parcelas",
                        "minimum": 2,
                        "maximum": 119
                      },
                      "split": {
                        "type": "object",
                        "properties": {
                          "taxationMode": {
                            "type": "string",
                            "enum": [
                              "onlyPrimary"
                            ],
                            "description": "Modo de divisão de taxas. Define qual estabelecimento arcará com as taxas incidentes sobre a fatura, só serão consideradas as taxas de intermediação, anti-fraude e processamento de pagamento, outras taxas como saque e notificações sempre serão de responsabilidade do estabelecimento primário.</br></br>\n        **_onlyPrimary_** = Somente primário, o estabelecimento primário arca com as taxas</br>\n        **_onlySecondary_** = Somente os estabelecimentos secundários arcam com as taxas</br>\n        **_divided_** = As taxas serão divididas entre todos estabelecimentos</br></br>\n        Obs.: caso ocorra dizimas ou uma divisão não-inteira, o valor excedente será repassado ao estabelecimento primário"
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpfCnpj": {
                                  "type": "string",
                                  "minLength": 11,
                                  "maxLength": 14,
                                  "description": "CPF ou CNPJ do estabelecimento, somente números",
                                  "example": "34778583000106"
                                },
                                "commission": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "fixedValue",
                                        "percentage"
                                      ],
                                      "description": "Tipo de comissão</br></br>\n                **_fixedValue_** = Valor fixo</br>\n                **_percentage_** = Porcentagem",
                                      "example": "percentage"
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "Valor da comissão em centavos ou porcentagem",
                                      "example": 50
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "description": "Comissão do estabelecimento"
                                }
                              },
                              "required": [
                                "cpfCnpj",
                                "commission"
                              ]
                            },
                            "minItems": 2,
                            "maxItems": 10,
                            "description": "Participantes do Split"
                          }
                        },
                        "required": [
                          "taxationMode",
                          "recipients"
                        ],
                        "description": "Configuração do Split, esta funcionalidade deve ser ativada antes da sua utilização"
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ],
                            "description": "Tipo de desconto</br></br>\n        **_fixedValue_** = Valor fixo</br>\n        **_percentage_** = Porcentagem",
                            "example": "percentage"
                          },
                          "discounts": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "maximum": 99,
                                      "description": "Porcentagem do desconto",
                                      "example": 10
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Data limite para o desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "description": "Valor do desconto em centavos",
                                      "example": 200
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Data limite para o desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              }
                            ],
                            "description": "Descontos, máximo 3 descontos por fatura"
                          }
                        },
                        "required": [
                          "type",
                          "discounts"
                        ],
                        "description": "Configuração dos descontos"
                      },
                      "_billingRuleId": {
                        "type": "string",
                        "description": "Identificador único da régua de cobrança"
                      },
                      "referenceId": {
                        "type": "string",
                        "maxLength": 150,
                        "description": "Pode-se inserir um identificador de referência"
                      },
                      "mulctAndInterest": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Habilitar ou desabilitar multa e juros"
                          },
                          "mulct": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ],
                                "description": "Tipo da multa</br></br>\n                **_fixedValue_** = Valor fixo</br>\n                **_percentage_** = Porcentagem",
                                "example": "percentage"
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "description": "Porcentagem da multa, não deve ultrapassar 99.99%",
                                    "example": 2,
                                    "x-required": true
                                  },
                                  {
                                    "type": "integer",
                                    "minimum": 1,
                                    "description": "Valor da multa em centavos, não deve ultrapassar o valor da fatura",
                                    "example": 200,
                                    "x-required": true
                                  }
                                ],
                                "description": "Valor da multa em centavos ou porcentagem"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ],
                            "description": "Configurações da multa, será aplicado uma única vez, após a data de vencimento"
                          },
                          "interest": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ],
                                "description": "Tipo da juros</br></br>\n                **_fixedValue_** = Valor fixo</br>\n                **_percentage_** = Porcentagem",
                                "example": "percentage"
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "description": "Porcentagem do juros diário, não deve ultrapassar 99.99%",
                                    "example": 0.033,
                                    "x-required": true
                                  },
                                  {
                                    "type": "integer",
                                    "minimum": 1,
                                    "description": "Valor da juros diário em centavos, não deve ultrapassar o valor da fatura",
                                    "example": 200,
                                    "x-required": true
                                  }
                                ],
                                "description": "Valor dos juros em centavos ou porcentagem"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ],
                            "description": "Configurações dos juros, será multiplicado pelos dias de atraso, após a data de vencimento"
                          }
                        },
                        "required": [
                          "enable"
                        ],
                        "description": "Configuração de multa e juros"
                      },
                      "observation": {
                        "type": "string",
                        "maxLength": 300,
                        "description": "Você pode inserir também uma observação, com até 300 caracteres"
                      }
                    },
                    "required": [
                      "_clientId",
                      "totalValue",
                      "description",
                      "startAt",
                      "paymentMethods",
                      "parcels"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "client": {
                        "description": "Criar um cliente juntamente com o Parcelamento",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "pf",
                              "pj"
                            ],
                            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "description": "Nome completo do cliente"
                          },
                          "treatmentPronoun": {
                            "type": "string",
                            "enum": [
                              "you",
                              "mr",
                              "lady"
                            ],
                            "description": "Saudação preferida<br/><br/>\n      you = Neutro<br/>\n      mr = Senhor<br/>\n      lady = Senhora"
                          },
                          "cpfCnpj": {
                            "type": "string",
                            "minLength": 11,
                            "maxLength": 14,
                            "description": "CPF ou CNPJ do cliente, somente números"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 255,
                            "description": "Email do cliente"
                          },
                          "cellphone": {
                            "type": "string",
                            "minLength": 10,
                            "maxLength": 11,
                            "description": "Número do celular do cliente, somente números, pode ser informado com ou sem digito 9"
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "street": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Rua/logradouro"
                              },
                              "zone": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Bairro/localidade"
                              },
                              "city": {
                                "type": "string",
                                "maxLength": 255,
                                "description": "Cidade"
                              },
                              "state": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 2,
                                "description": "Sigla do estado"
                              },
                              "number": {
                                "type": "string",
                                "maxLength": 255,
                                "nullable": true,
                                "description": "Número"
                              },
                              "complement": {
                                "type": "string",
                                "maxLength": 255,
                                "nullable": true,
                                "description": "Complemento"
                              },
                              "zip": {
                                "type": "string",
                                "minLength": 8,
                                "maxLength": 8,
                                "description": "Cep/código postal, apenas números"
                              }
                            },
                            "required": [
                              "street",
                              "zone",
                              "city",
                              "state",
                              "zip"
                            ],
                            "description": "Endereço do cliente"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "cpfCnpj",
                          "email",
                          "cellphone"
                        ]
                      },
                      "totalValue": {
                        "type": "number",
                        "format": "float",
                        "minimum": 1000,
                        "maximum": 5000000,
                        "description": "Valor total do parcelamento"
                      },
                      "description": {
                        "type": "string",
                        "maxLength": 300,
                        "description": "Descrição do parcelamento, máximo de 300 carácter"
                      },
                      "startAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": " Data de início do parcelamento "
                      },
                      "paymentMethods": {
                        "type": "object",
                        "description": "Método de pagamento do parcelamento",
                        "properties": {
                          "pix": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean",
                                "description": "Habilitar ou desabilitar o pagamento via Pix"
                              }
                            },
                            "required": [
                              "enable"
                            ],
                            "description": "Configuração do Pix"
                          },
                          "boleto": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean",
                                "description": "Habilitar ou desabilitar o pagamento via Boleto"
                              }
                            },
                            "required": [
                              "enable"
                            ],
                            "description": "Configuração do Boleto"
                          }
                        },
                        "required": [
                          "pix",
                          "boleto"
                        ]
                      },
                      "parcels": {
                        "type": "integer",
                        "description": "Quantidade de parcelas mínimo de 2 e máximo de 119 parcelas",
                        "minimum": 2,
                        "maximum": 119
                      },
                      "split": {
                        "type": "object",
                        "properties": {
                          "taxationMode": {
                            "type": "string",
                            "enum": [
                              "onlyPrimary"
                            ],
                            "description": "Modo de divisão de taxas. Define qual estabelecimento arcará com as taxas incidentes sobre a fatura, só serão consideradas as taxas de intermediação, anti-fraude e processamento de pagamento, outras taxas como saque e notificações sempre serão de responsabilidade do estabelecimento primário.</br></br>\n        **_onlyPrimary_** = Somente primário, o estabelecimento primário arca com as taxas</br>\n        **_onlySecondary_** = Somente os estabelecimentos secundários arcam com as taxas</br>\n        **_divided_** = As taxas serão divididas entre todos estabelecimentos</br></br>\n        Obs.: caso ocorra dizimas ou uma divisão não-inteira, o valor excedente será repassado ao estabelecimento primário"
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpfCnpj": {
                                  "type": "string",
                                  "minLength": 11,
                                  "maxLength": 14,
                                  "description": "CPF ou CNPJ do estabelecimento, somente números",
                                  "example": "34778583000106"
                                },
                                "commission": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "fixedValue",
                                        "percentage"
                                      ],
                                      "description": "Tipo de comissão</br></br>\n                **_fixedValue_** = Valor fixo</br>\n                **_percentage_** = Porcentagem",
                                      "example": "percentage"
                                    },
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "description": "Valor da comissão em centavos ou porcentagem",
                                      "example": 50
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "description": "Comissão do estabelecimento"
                                }
                              },
                              "required": [
                                "cpfCnpj",
                                "commission"
                              ]
                            },
                            "minItems": 2,
                            "maxItems": 10,
                            "description": "Participantes do Split"
                          }
                        },
                        "required": [
                          "taxationMode",
                          "recipients"
                        ],
                        "description": "Configuração do Split, esta funcionalidade deve ser ativada antes da sua utilização"
                      },
                      "discount": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ],
                            "description": "Tipo de desconto</br></br>\n        **_fixedValue_** = Valor fixo</br>\n        **_percentage_** = Porcentagem",
                            "example": "percentage"
                          },
                          "discounts": {
                            "oneOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number",
                                      "format": "float",
                                      "minimum": 1,
                                      "maximum": 99,
                                      "description": "Porcentagem do desconto",
                                      "example": 10
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Data limite para o desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "description": "Valor do desconto em centavos",
                                      "example": 200
                                    },
                                    "validUntil": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Data limite para o desconto"
                                    }
                                  },
                                  "required": [
                                    "value",
                                    "validUntil"
                                  ]
                                },
                                "minItems": 1,
                                "maxItems": 3,
                                "uniqueItems": true
                              }
                            ],
                            "description": "Descontos, máximo 3 descontos por fatura"
                          }
                        },
                        "required": [
                          "type",
                          "discounts"
                        ],
                        "description": "Configuração dos descontos"
                      },
                      "_billingRuleId": {
                        "type": "string",
                        "description": "Identificador único da régua de cobrança"
                      },
                      "referenceId": {
                        "type": "string",
                        "maxLength": 150,
                        "description": "Pode-se inserir um identificador de referência"
                      },
                      "mulctAndInterest": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Habilitar ou desabilitar multa e juros"
                          },
                          "mulct": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ],
                                "description": "Tipo da multa</br></br>\n                **_fixedValue_** = Valor fixo</br>\n                **_percentage_** = Porcentagem",
                                "example": "percentage"
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "description": "Porcentagem da multa, não deve ultrapassar 99.99%",
                                    "example": 2,
                                    "x-required": true
                                  },
                                  {
                                    "type": "integer",
                                    "minimum": 1,
                                    "description": "Valor da multa em centavos, não deve ultrapassar o valor da fatura",
                                    "example": 200,
                                    "x-required": true
                                  }
                                ],
                                "description": "Valor da multa em centavos ou porcentagem"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ],
                            "description": "Configurações da multa, será aplicado uma única vez, após a data de vencimento"
                          },
                          "interest": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "fixedValue",
                                  "percentage"
                                ],
                                "description": "Tipo da juros</br></br>\n                **_fixedValue_** = Valor fixo</br>\n                **_percentage_** = Porcentagem",
                                "example": "percentage"
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "format": "float",
                                    "minimum": 0.01,
                                    "maximum": 99.99,
                                    "description": "Porcentagem do juros diário, não deve ultrapassar 99.99%",
                                    "example": 0.033,
                                    "x-required": true
                                  },
                                  {
                                    "type": "integer",
                                    "minimum": 1,
                                    "description": "Valor da juros diário em centavos, não deve ultrapassar o valor da fatura",
                                    "example": 200,
                                    "x-required": true
                                  }
                                ],
                                "description": "Valor dos juros em centavos ou porcentagem"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ],
                            "description": "Configurações dos juros, será multiplicado pelos dias de atraso, após a data de vencimento"
                          }
                        },
                        "required": [
                          "enable"
                        ],
                        "description": "Configuração de multa e juros"
                      },
                      "observation": {
                        "type": "string",
                        "maxLength": 300,
                        "description": "Você pode inserir também uma observação, com até 300 caracteres"
                      }
                    },
                    "required": [
                      "client",
                      "totalValue",
                      "description",
                      "startAt",
                      "paymentMethods",
                      "parcels"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Installment",
                  "required": [
                    "description",
                    "rates",
                    "_clientId",
                    "client",
                    "paymentMethods",
                    "notifications",
                    "invoices",
                    "startAt",
                    "parcels",
                    "parcelValue",
                    "totalValue",
                    "_recipientId",
                    "status"
                  ],
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "_billingRuleId": {
                          "type": "string",
                          "description": "Identificador único da régua de cobrança"
                        },
                        "notifications": {
                          "type": "object",
                          "properties": {
                            "whatsapp": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "email": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "sms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "isRatesToPayer": {
                              "type": "boolean"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "invoices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "startAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "parcels": {
                      "type": "number"
                    },
                    "parcelValue": {
                      "type": "number"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "description": "Status da requisição - (HTTP)",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ],
                      "description": "Detalhes do error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Este recurso está bloqueado, o estabelecimento ainda não enviou seus documentos."
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone",
                      "description": "Descriçao da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "error",
                    "metadata"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida",
                      "description": "Mensagem do erro"
                    },
                    "error": {
                      "type": "object",
                      "description": "Detalhes do erro",
                      "required": [
                        "_original",
                        "details"
                      ],
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {
                            "name": "",
                            "email": "suporte@lytex.com.br"
                          }
                        },
                        "details": {
                          "type": "array",
                          "description": "Detalhe dos campos inválidos",
                          "items": {
                            "type": "object",
                            "required": [
                              "message",
                              "path",
                              "type",
                              "context"
                            ],
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "description": "Campo(s) em que ocorreu o(s) erro(s)",
                                "items": {
                                  "type": "string",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes da localização campo",
                                "required": [
                                  "label",
                                  "key"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Caminho absoluto do campo",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "Nome do campo",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Informações adicionais",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem dos dados inválidos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error",
                      "description": "Detalhes do erro"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Parcelamentos"
        ],
        "security": [
          {
            "lytexAuth": [
              "installment.create"
            ]
          }
        ]
      },
      "get": {
        "operationId": "InstallmentController_listInstallment",
        "summary": "Listar parcelamentos",
        "description": "Lista todos os parcelmento de um determinado estabelecimento.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Nome a ser pesquisado",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pf",
                "pj"
              ]
            },
            "description": "Tipo de cliente<br/><br/>\n      pf = Pessoa Física<br/>\n      pj = Pessoa Jurídica"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Data Inicial",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Data final",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "status da parcelamento",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payedStartDate",
            "in": "query",
            "description": "data de início paga",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "payedEndDate",
            "in": "query",
            "description": "data final paga",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationStartDate",
            "in": "query",
            "description": "data de início da criação",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "creationEndDate",
            "in": "query",
            "description": "data final da criação",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "página atual",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Número da página",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "description": "Quantidade de itens por página",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "description": "Número de resultados por página",
              "default": 10
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "campo de classificação",
            "schema": {
              "type": "string",
              "maxLength": 100,
              "description": "Campo utilizado para ordenação"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Ordenar resposta",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "description": "Tipo de ordenação",
              "default": "DESC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "parcels": {
                            "type": "number"
                          },
                          "client": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "object",
                                "properties": {
                                  "zip": {
                                    "type": "string"
                                  },
                                  "complement": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "type": "string"
                                  },
                                  "city": {
                                    "type": "string"
                                  },
                                  "zone": {
                                    "type": "string"
                                  },
                                  "street": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cellphone": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "cpfCnpj": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "pf",
                                  "pj"
                                ]
                              },
                              "treatmentPronoun": {
                                "type": "string",
                                "enum": [
                                  "you",
                                  "mr",
                                  "lady"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "startAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "totalValue": {
                            "type": "number"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "description": "Dados da paginação",
                      "required": [
                        "perPage",
                        "page",
                        "pages",
                        "total"
                      ],
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "description": "Número de resultados por página",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 10
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1,
                          "description": "Número da página"
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1,
                          "default": 1,
                          "description": "Número total de páginas"
                        },
                        "total": {
                          "type": "integer",
                          "description": "Número total de resultados"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "description": "Status da requisição - (HTTP)",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ],
                      "description": "Detalhes do error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Esta integracão não tem permissão para executar essa ação",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone",
                      "description": "Descriçao da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "error",
                    "metadata"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida",
                      "description": "Mensagem do erro"
                    },
                    "error": {
                      "type": "object",
                      "description": "Detalhes do erro",
                      "required": [
                        "_original",
                        "details"
                      ],
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {
                            "name": "",
                            "email": "suporte@lytex.com.br"
                          }
                        },
                        "details": {
                          "type": "array",
                          "description": "Detalhe dos campos inválidos",
                          "items": {
                            "type": "object",
                            "required": [
                              "message",
                              "path",
                              "type",
                              "context"
                            ],
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "description": "Campo(s) em que ocorreu o(s) erro(s)",
                                "items": {
                                  "type": "string",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes da localização campo",
                                "required": [
                                  "label",
                                  "key"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Caminho absoluto do campo",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "Nome do campo",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Informações adicionais",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem dos dados inválidos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error",
                      "description": "Detalhes do erro"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Parcelamentos"
        ],
        "security": [
          {
            "lytexAuth": [
              "installment.get"
            ]
          }
        ]
      }
    },
    "/v1/installment/{id}": {
      "get": {
        "operationId": "InstallmentController_getInvoice",
        "summary": "Detalhes do Parcelamento",
        "description": "Retorna detalhamento de um parcelamento",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único do parcelamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Installment",
                  "required": [
                    "description",
                    "rates",
                    "_clientId",
                    "client",
                    "paymentMethods",
                    "notifications",
                    "invoices",
                    "startAt",
                    "parcels",
                    "parcelValue",
                    "totalValue",
                    "_recipientId",
                    "status"
                  ],
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "_billingRuleId": {
                          "type": "string",
                          "description": "Identificador único da régua de cobrança"
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "isRatesToPayer": {
                              "type": "boolean"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "types": {
                          "type": "object",
                          "properties": {
                            "invoicePaid": {
                              "type": "boolean"
                            },
                            "expirationDay": {
                              "type": "boolean"
                            },
                            "daysBeforeExpiration3": {
                              "type": "boolean"
                            },
                            "invoiceCreate": {
                              "type": "boolean"
                            }
                          }
                        },
                        "channels": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "boolean"
                            },
                            "sms": {
                              "type": "boolean"
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "invoices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "startAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "parcels": {
                      "type": "number"
                    },
                    "parcelValue": {
                      "type": "number"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "description": "Status da requisição - (HTTP)",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ],
                      "description": "Detalhes do error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Enviar Documentos Pendentes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Enviar Documentos Pendentes. Faturas com split não podem ser criadas."
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone",
                      "description": "Descriçao da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "error",
                    "metadata"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida",
                      "description": "Mensagem do erro"
                    },
                    "error": {
                      "type": "object",
                      "description": "Detalhes do erro",
                      "required": [
                        "_original",
                        "details"
                      ],
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {
                            "name": "",
                            "email": "suporte@lytex.com.br"
                          }
                        },
                        "details": {
                          "type": "array",
                          "description": "Detalhe dos campos inválidos",
                          "items": {
                            "type": "object",
                            "required": [
                              "message",
                              "path",
                              "type",
                              "context"
                            ],
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "description": "Campo(s) em que ocorreu o(s) erro(s)",
                                "items": {
                                  "type": "string",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes da localização campo",
                                "required": [
                                  "label",
                                  "key"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Caminho absoluto do campo",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "Nome do campo",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Informações adicionais",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem dos dados inválidos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error",
                      "description": "Detalhes do erro"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Parcelamentos"
        ],
        "security": [
          {
            "lytexAuth": [
              "installment.get"
            ]
          }
        ]
      }
    },
    "/v1/installment/cancel/{id}": {
      "put": {
        "operationId": "InstallmentController_cancel",
        "summary": "Cancelar parcelamento",
        "description": "Cancelar um parcelamento de um determinado cliente.",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único do parcelamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Installment",
                  "required": [
                    "description",
                    "rates",
                    "_clientId",
                    "client",
                    "paymentMethods",
                    "notifications",
                    "invoices",
                    "startAt",
                    "parcels",
                    "parcelValue",
                    "totalValue",
                    "_recipientId",
                    "status"
                  ],
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "rates": {
                      "type": "object",
                      "properties": {
                        "antifraud": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "_billingRuleId": {
                          "type": "string",
                          "description": "Identificador único da régua de cobrança"
                        },
                        "processing": {
                          "type": "object",
                          "properties": {
                            "creditCard": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "boleto": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "pix": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "loot": {
                          "type": "object",
                          "properties": {
                            "perLoot": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "freeMonthlyLoots": {
                              "type": "number"
                            }
                          }
                        },
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "installment": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "liquidation": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "emission": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    },
                    "_clientId": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "zip": {
                              "type": "string"
                            },
                            "complement": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zone": {
                              "type": "string"
                            },
                            "street": {
                              "type": "string"
                            }
                          }
                        },
                        "cellphone": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "cpfCnpj": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "pf",
                            "pj"
                          ]
                        },
                        "treatmentPronoun": {
                          "type": "string",
                          "enum": [
                            "you",
                            "mr",
                            "lady"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "isRatesToPayer": {
                              "type": "boolean"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "invoices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "startAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "parcels": {
                      "type": "number"
                    },
                    "parcelValue": {
                      "type": "number"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "description": "Status da requisição - (HTTP)",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ],
                      "description": "Detalhes do error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Este recurso está bloqueado, o estabelecimento ainda não enviou seus documentos."
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone",
                      "description": "Descriçao da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "error",
                    "metadata"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida",
                      "description": "Mensagem do erro"
                    },
                    "error": {
                      "type": "object",
                      "description": "Detalhes do erro",
                      "required": [
                        "_original",
                        "details"
                      ],
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {
                            "name": "",
                            "email": "suporte@lytex.com.br"
                          }
                        },
                        "details": {
                          "type": "array",
                          "description": "Detalhe dos campos inválidos",
                          "items": {
                            "type": "object",
                            "required": [
                              "message",
                              "path",
                              "type",
                              "context"
                            ],
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "description": "Campo(s) em que ocorreu o(s) erro(s)",
                                "items": {
                                  "type": "string",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes da localização campo",
                                "required": [
                                  "label",
                                  "key"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Caminho absoluto do campo",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "Nome do campo",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Informações adicionais",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem dos dados inválidos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error",
                      "description": "Detalhes do erro"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Parcelamentos"
        ],
        "security": [
          {
            "lytexAuth": [
              "installment.cancel"
            ]
          }
        ]
      }
    },
    "/v2/billing-rules": {
      "get": {
        "operationId": "BillingRulesController_list",
        "summary": "Listar réguas de cobrança",
        "description": "Retorna todas as réguas de cobrança cadastradas no estabelecimento ",
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Resultados da pesquisa/listagem",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "isDefault": {
                        "type": "boolean"
                      },
                      "_billingRuleId": {
                        "type": "string",
                        "description": "Identificador único da régua de cobrança"
                      },
                      "notifications": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "description": "Status da requisição - (HTTP)",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ],
                      "description": "Detalhes do error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Esta integracão não tem permissão para executar essa ação",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone",
                      "description": "Descriçao da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "error",
                    "metadata"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida",
                      "description": "Mensagem do erro"
                    },
                    "error": {
                      "type": "object",
                      "description": "Detalhes do erro",
                      "required": [
                        "_original",
                        "details"
                      ],
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {
                            "name": "",
                            "email": "suporte@lytex.com.br"
                          }
                        },
                        "details": {
                          "type": "array",
                          "description": "Detalhe dos campos inválidos",
                          "items": {
                            "type": "object",
                            "required": [
                              "message",
                              "path",
                              "type",
                              "context"
                            ],
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "description": "Campo(s) em que ocorreu o(s) erro(s)",
                                "items": {
                                  "type": "string",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes da localização campo",
                                "required": [
                                  "label",
                                  "key"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Caminho absoluto do campo",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "Nome do campo",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Informações adicionais",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem dos dados inválidos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error",
                      "description": "Detalhes do erro"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Régua de cobrança"
        ],
        "security": [
          {
            "lytexAuth": [
              "billing-rules.get"
            ]
          }
        ]
      },
      "post": {
        "operationId": "BillingRulesController_create",
        "summary": "Criar nova régua de cobrança",
        "description": "Cria uma nova régua de cobrança para notificar os clientes sobre a cobrança",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "_billingRuleId": {
                    "type": "string",
                    "description": "Identificador único da régua de cobrança"
                  },
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "event": {
                          "type": "string",
                          "enum": [
                            "invoiceCreate",
                            "invoicePaid",
                            "invoiceChange",
                            "beforeOverdue",
                            "afterOverdue",
                            "expirationDay"
                          ],
                          "description": "Evento da notificação"
                        },
                        "channel": {
                          "type": "string",
                          "enum": [
                            "email",
                            "sms",
                            "whatsApp"
                          ],
                          "description": "Canal da notificação"
                        },
                        "beforeOverdue": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "days": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1,
                                  "description": "Dias antes do vencimento"
                                }
                              },
                              "required": [
                                "days"
                              ],
                              "description": "Configuração das notificações",
                              "x-required": true
                            }
                          ],
                          "description": "notificação antes do vencimento (quando o evento for beforeOverdue)"
                        },
                        "afterOverdue": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "daysInit": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1,
                                  "description": "Dias após o vencimento"
                                },
                                "daysInterval": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1,
                                  "description": "Intervalo de dias"
                                },
                                "daysDuration": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1,
                                  "description": "Duração do intervalo"
                                }
                              },
                              "required": [
                                "daysInit",
                                "daysInterval",
                                "daysDuration"
                              ],
                              "x-required": true
                            }
                          ],
                          "description": "notificação após o vencimento (quando o evento for afterOverdue)"
                        }
                      },
                      "required": [
                        "event",
                        "channel"
                      ],
                      "description": "Configuração das notificações"
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "name",
                  "isDefault",
                  "notifications"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BillingRule",
                  "required": [
                    "notifications",
                    "isDefault",
                    "_recipientId",
                    "name"
                  ],
                  "properties": {
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "description": "Status da requisição - (HTTP)",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ],
                      "description": "Detalhes do error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Esta integracão não tem permissão para executar essa ação",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone",
                      "description": "Descriçao da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "error",
                    "metadata"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida",
                      "description": "Mensagem do erro"
                    },
                    "error": {
                      "type": "object",
                      "description": "Detalhes do erro",
                      "required": [
                        "_original",
                        "details"
                      ],
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {
                            "name": "",
                            "email": "suporte@lytex.com.br"
                          }
                        },
                        "details": {
                          "type": "array",
                          "description": "Detalhe dos campos inválidos",
                          "items": {
                            "type": "object",
                            "required": [
                              "message",
                              "path",
                              "type",
                              "context"
                            ],
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "description": "Campo(s) em que ocorreu o(s) erro(s)",
                                "items": {
                                  "type": "string",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes da localização campo",
                                "required": [
                                  "label",
                                  "key"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Caminho absoluto do campo",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "Nome do campo",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Informações adicionais",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem dos dados inválidos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error",
                      "description": "Detalhes do erro"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Régua de cobrança"
        ],
        "security": [
          {
            "lytexAuth": [
              "billing-rules.post"
            ]
          }
        ]
      }
    },
    "/v2/billing-rules/{id}": {
      "get": {
        "operationId": "BillingRulesController_getBillingRule",
        "summary": "Detalhes da régua de cobrança",
        "description": "Retorna detalhamento de uma régua de cobrança",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "description": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Régua de cobrança inválida"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "description": "Status da requisição - (HTTP)",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ],
                      "description": "Detalhes do error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Esta integracão não tem permissão para executar essa ação",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone",
                      "description": "Descriçao da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "error",
                    "metadata"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida",
                      "description": "Mensagem do erro"
                    },
                    "error": {
                      "type": "object",
                      "description": "Detalhes do erro",
                      "required": [
                        "_original",
                        "details"
                      ],
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {
                            "name": "",
                            "email": "suporte@lytex.com.br"
                          }
                        },
                        "details": {
                          "type": "array",
                          "description": "Detalhe dos campos inválidos",
                          "items": {
                            "type": "object",
                            "required": [
                              "message",
                              "path",
                              "type",
                              "context"
                            ],
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "description": "Campo(s) em que ocorreu o(s) erro(s)",
                                "items": {
                                  "type": "string",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes da localização campo",
                                "required": [
                                  "label",
                                  "key"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Caminho absoluto do campo",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "Nome do campo",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Informações adicionais",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem dos dados inválidos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error",
                      "description": "Detalhes do erro"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Régua de cobrança"
        ],
        "security": [
          {
            "lytexAuth": [
              "billing-rules.get"
            ]
          }
        ]
      },
      "put": {
        "operationId": "BillingRulesController_update",
        "summary": "Atualizar uma régua de cobrança",
        "description": "Atualize uma determinada régua de cobrança.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "_billingRuleId": {
                    "type": "string",
                    "description": "Identificador único da régua de cobrança"
                  },
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "event": {
                          "type": "string",
                          "enum": [
                            "invoiceCreate",
                            "invoicePaid",
                            "invoiceChange",
                            "beforeOverdue",
                            "afterOverdue",
                            "expirationDay"
                          ],
                          "description": "Evento da notificação"
                        },
                        "channel": {
                          "type": "string",
                          "enum": [
                            "email",
                            "sms",
                            "whatsApp"
                          ],
                          "description": "Canal da notificação"
                        },
                        "beforeOverdue": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "days": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1,
                                  "description": "Dias antes do vencimento"
                                }
                              },
                              "required": [
                                "days"
                              ],
                              "description": "Configuração das notificações",
                              "x-required": true
                            }
                          ],
                          "description": "notificação antes do vencimento (quando o evento for beforeOverdue)"
                        },
                        "afterOverdue": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "daysInit": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1,
                                  "description": "Dias após o vencimento"
                                },
                                "daysInterval": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1,
                                  "description": "Intervalo de dias"
                                },
                                "daysDuration": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1,
                                  "description": "Duração do intervalo"
                                }
                              },
                              "required": [
                                "daysInit",
                                "daysInterval",
                                "daysDuration"
                              ],
                              "x-required": true
                            }
                          ],
                          "description": "notificação após o vencimento (quando o evento for afterOverdue)"
                        }
                      },
                      "required": [
                        "event",
                        "channel"
                      ],
                      "description": "Configuração das notificações"
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "name",
                  "isDefault",
                  "notifications"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "Identificado único da régua de cobrança "
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "description": "Status da requisição - (HTTP)",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ],
                      "description": "Detalhes do error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Esta integracão não tem permissão para executar essa ação",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone",
                      "description": "Descriçao da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "error",
                    "metadata"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida",
                      "description": "Mensagem do erro"
                    },
                    "error": {
                      "type": "object",
                      "description": "Detalhes do erro",
                      "required": [
                        "_original",
                        "details"
                      ],
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {
                            "name": "",
                            "email": "suporte@lytex.com.br"
                          }
                        },
                        "details": {
                          "type": "array",
                          "description": "Detalhe dos campos inválidos",
                          "items": {
                            "type": "object",
                            "required": [
                              "message",
                              "path",
                              "type",
                              "context"
                            ],
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "description": "Campo(s) em que ocorreu o(s) erro(s)",
                                "items": {
                                  "type": "string",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes da localização campo",
                                "required": [
                                  "label",
                                  "key"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Caminho absoluto do campo",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "Nome do campo",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Informações adicionais",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem dos dados inválidos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error",
                      "description": "Detalhes do erro"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Régua de cobrança"
        ],
        "security": [
          {
            "lytexAuth": [
              "billing-rules.put"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "BillingRulesController_delete",
        "summary": "Deletar régua de cobrança",
        "description": "Delete uma determinada régua de cobrança",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "description": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "description": "Status da requisição - (HTTP)",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ],
                      "description": "Detalhes do error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Esta integracão não tem permissão para executar essa ação",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "Descrição da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado"
                      ],
                      "description": "Detalhes do erro"
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone",
                      "description": "Descriçao da requisição (HTTP)"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "error",
                    "metadata"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida",
                      "description": "Mensagem do erro"
                    },
                    "error": {
                      "type": "object",
                      "description": "Detalhes do erro",
                      "required": [
                        "_original",
                        "details"
                      ],
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {
                            "name": "",
                            "email": "suporte@lytex.com.br"
                          }
                        },
                        "details": {
                          "type": "array",
                          "description": "Detalhe dos campos inválidos",
                          "items": {
                            "type": "object",
                            "required": [
                              "message",
                              "path",
                              "type",
                              "context"
                            ],
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "description": "Campo(s) em que ocorreu o(s) erro(s)",
                                "items": {
                                  "type": "string",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes da localização campo",
                                "required": [
                                  "label",
                                  "key"
                                ],
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "description": "Caminho absoluto do campo",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "description": "Nome do campo",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Informações adicionais",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem dos dados inválidos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "statusCode",
                    "message"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500,
                      "description": "Status da requisição (HTTP)"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error",
                      "description": "Detalhes do erro"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Régua de cobrança"
        ],
        "security": [
          {
            "lytexAuth": [
              "billing-rules.delete"
            ]
          }
        ]
      }
    },
    "/v1/receivables/{transactionId}": {
      "get": {
        "operationId": "ReceivablesController_getReceivablesByTransaction",
        "summary": "Listar recebíveis de uma transação",
        "description": "Listar todos os recebíveis gerados através de uma transação.",
        "parameters": [
          {
            "name": "transactionId",
            "description": "Identificador único da fatura",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso"
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recebíveis"
        ],
        "security": [
          {
            "lytexAuth": [
              "receivable.get"
            ]
          }
        ]
      }
    },
    "/v1/payment_links": {
      "post": {
        "operationId": "PaymentLinksController_createPaymentLink",
        "summary": "Criar link de pagamento",
        "description": "Cria um link de pagamento para receber cobrança de cliente via boleto bancário e/ou Pix.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "description": "descrição do link de pagamento",
                    "type": "string",
                    "maxLength": 255
                  },
                  "items": {
                    "description": "Informações do produto",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 255,
                          "description": "Nome do Produto"
                        },
                        "quantity": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Quantidade"
                        },
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Valor unitário do produto"
                        }
                      },
                      "required": [
                        "name",
                        "quantity",
                        "value"
                      ]
                    },
                    "minItems": 1
                  },
                  "expirationDate": {
                    "description": "Data para expirar o link de pagamento ",
                    "type": "string",
                    "format": "date-time"
                  },
                  "quantity": {
                    "description": "Quantidade de utilização ( contabiliza as faturas pagas ) ",
                    "type": "number",
                    "format": "float",
                    "minimum": 1
                  },
                  "paymentMethods": {
                    "description": "Métodos de pagamento,cartão de crédito, boleto, pix. Repassar no cartão de crédito o parâmetro maxParcels",
                    "type": "object",
                    "properties": {
                      "pix": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "boleto": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "dueDateDays": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "creditCard": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "maxParcels": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "interestFreeUntil": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "monthlyInterest": {
                            "type": "integer",
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      }
                    },
                    "required": [
                      "pix",
                      "boleto",
                      "creditCard"
                    ]
                  },
                  "_billingRuleId": {
                    "type": "string",
                    "description": "Identificador único da régua de cobrança"
                  },
                  "split": {
                    "type": "object",
                    "properties": {
                      "taxationMode": {
                        "type": "string",
                        "enum": [
                          "onlyPrimary"
                        ]
                      },
                      "recipients": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cpfCnpj": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "x-required": true
                                }
                              ]
                            },
                            "commission": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "fixedValue",
                                    "percentage"
                                  ]
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1
                                }
                              },
                              "required": [
                                "type",
                                "value"
                              ]
                            }
                          },
                          "required": [
                            "cpfCnpj",
                            "commission"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 10
                      }
                    },
                    "required": [
                      "taxationMode",
                      "recipients"
                    ]
                  },
                  "mulctAndInterest": {
                    "description": "Configurar multa e juros",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "description": "Deseja criar configuração de multa e juros",
                        "type": "boolean",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "mulct": {
                        "description": "Multa após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "interest": {
                        "description": "Juros diário após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "enable"
                    ]
                  },
                  "observation": {
                    "description": "Você pode inserir também uma observação, com até 300 caracteres",
                    "type": "string",
                    "maxLength": 300
                  }
                },
                "required": [
                  "description",
                  "items",
                  "paymentMethods"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLink",
                  "required": [
                    "paymentMethods",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "description"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "disabled",
                        "expired"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.create"
            ]
          }
        ]
      },
      "get": {
        "operationId": "PaymentLinksController_listPaymentLinks",
        "summary": "Listar links de pagamento",
        "description": "Lista links de pagamento do beneficiário, aceita filtros, ordenação e paginação.",
        "parameters": [
          {
            "name": "search",
            "description": "Nome a ser pesquisado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "description": "Data Inicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "description": "Data final",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "isActive",
            "description": "buscar por link ativos",
            "in": "query",
            "schema": {
              "enum": [
                true,
                false
              ],
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "description": "status do link de pagamento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "página atual",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "description": "Quantidade de itens por página",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "sortField",
            "description": "campo de classificação",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "description": "Ordenar resposta ",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number"
                                },
                                "quantity": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "value",
                                "quantity",
                                "name"
                              ]
                            }
                          },
                          "expirationDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "totalValue": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.get"
            ]
          }
        ]
      }
    },
    "/v1/payment_links/{id}": {
      "get": {
        "operationId": "PaymentLinksController_getPaymentLink",
        "summary": "Detalhes do link de pagamento",
        "description": "Fornece detalhes do link de pagamento para identificar a cobrança.",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único do link de pagamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLink",
                  "required": [
                    "paymentMethods",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "description"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "disabled",
                        "expired"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Link de pagamento inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.get"
            ]
          }
        ]
      },
      "put": {
        "operationId": "PaymentLinksController_updatePaymentLink",
        "summary": "Atualizar link de pagamento",
        "description": "Atualiza dados do link de pagamento.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "description": "descrição do link de pagamento",
                    "type": "string",
                    "maxLength": 255
                  },
                  "items": {
                    "description": "Informações do produto",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "maxLength": 255,
                          "description": "Nome do Produto"
                        },
                        "quantity": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Quantidade"
                        },
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "description": "Valor unitário do produto"
                        }
                      },
                      "required": [
                        "name",
                        "quantity",
                        "value"
                      ]
                    },
                    "minItems": 1
                  },
                  "expirationDate": {
                    "description": "Data para expirar o link de pagamento ",
                    "type": "string",
                    "format": "date-time"
                  },
                  "quantity": {
                    "description": "Quantidade de utilização (contabiliza as faturas pagas)",
                    "type": "number",
                    "format": "float",
                    "minimum": 1
                  },
                  "paymentMethods": {
                    "description": "Métodos de pagamento,cartão de crédito, boleto, pix. Repassar no cartão de crédito o parâmetro maxParcels",
                    "type": "object",
                    "properties": {
                      "pix": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "boleto": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "dueDateDays": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      },
                      "creditCard": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "maxParcels": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "interestFreeUntil": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 12
                          },
                          "monthlyInterest": {
                            "type": "integer",
                            "maximum": 100
                          }
                        },
                        "required": [
                          "enable"
                        ]
                      }
                    },
                    "required": [
                      "pix",
                      "boleto",
                      "creditCard"
                    ]
                  },
                  "_billingRuleId": {
                    "type": "string",
                    "description": "Identificador único da régua de cobrança"
                  },
                  "split": {
                    "type": "object",
                    "properties": {
                      "taxationMode": {
                        "type": "string",
                        "enum": [
                          "onlyPrimary"
                        ]
                      },
                      "recipients": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cpfCnpj": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "x-required": true
                                }
                              ]
                            },
                            "commission": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "fixedValue",
                                    "percentage"
                                  ]
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "minimum": 1
                                }
                              },
                              "required": [
                                "type",
                                "value"
                              ]
                            }
                          },
                          "required": [
                            "cpfCnpj",
                            "commission"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 10
                      }
                    },
                    "required": [
                      "taxationMode",
                      "recipients"
                    ]
                  },
                  "mulctAndInterest": {
                    "description": "Configurar multa e juros",
                    "type": "object",
                    "properties": {
                      "enable": {
                        "description": "Deseja criar configuração de multa e juros",
                        "type": "boolean",
                        "enum": [
                          true,
                          false
                        ]
                      },
                      "mulct": {
                        "description": "Multa após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "interest": {
                        "description": "Juros diário após o vencimento da fatura",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Definir se será um valor fixo ou uma porcentagem",
                            "type": "string",
                            "enum": [
                              "fixedValue",
                              "percentage"
                            ]
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 1",
                                "minimum": 1,
                                "x-required": true
                              },
                              {
                                "type": "object",
                                "description": "Deve-se inserir um valor maior que 0.01 e menor que 99.99",
                                "format": "float",
                                "minimum": 0.01,
                                "maximum": 99.99,
                                "x-required": true
                              }
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "enable"
                    ]
                  },
                  "observation": {
                    "description": "Você pode inserir também uma observação, com até 300 caracteres",
                    "type": "string",
                    "maxLength": 300
                  }
                },
                "required": [
                  "description",
                  "items",
                  "paymentMethods"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único do link de pagamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLink",
                  "required": [
                    "paymentMethods",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "description"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "disabled",
                        "expired"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.update"
            ]
          }
        ]
      }
    },
    "/v1/payment_links/{id}/active": {
      "put": {
        "operationId": "PaymentLinksController_activePaymentLink",
        "summary": "Ativar link de pagamento",
        "description": "Ativa um link de pagamento.",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador unico do link de pagamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLink",
                  "required": [
                    "paymentMethods",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "description"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "disabled",
                        "expired"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.activate"
            ]
          }
        ]
      }
    },
    "/v1/payment_links/{id}/disable": {
      "put": {
        "operationId": "PaymentLinksController_disablePaymentLink",
        "summary": "Desativar link de pagamento",
        "description": "Desativa um link de pagamento.",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único do link de pagamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLink",
                  "required": [
                    "paymentMethods",
                    "totalValue",
                    "items",
                    "_recipientId",
                    "description"
                  ],
                  "properties": {
                    "mulctAndInterest": {
                      "type": "object",
                      "properties": {
                        "interest": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "mulct": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "fixedValue",
                                "percentage"
                              ]
                            }
                          }
                        },
                        "enable": {
                          "type": "boolean"
                        }
                      }
                    },
                    "observation": {
                      "type": "string"
                    },
                    "_billingRuleId": {
                      "type": "string",
                      "description": "Identificador único da régua de cobrança"
                    },
                    "paymentMethods": {
                      "type": "object",
                      "properties": {
                        "creditCard": {
                          "type": "object",
                          "properties": {
                            "monthlyInterest": {
                              "type": "number"
                            },
                            "interestFreeUntil": {
                              "type": "number"
                            },
                            "maxParcels": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "boleto": {
                          "type": "object",
                          "properties": {
                            "dueDateDays": {
                              "type": "number"
                            },
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        },
                        "pix": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "split": {
                      "type": "object",
                      "properties": {
                        "taxationMode": {
                          "type": "string",
                          "enum": [
                            "onlyPrimary"
                          ]
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "quantity": {
                      "type": "number"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "totalValue": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "quantity": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value",
                          "quantity",
                          "name"
                        ]
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "disabled",
                        "expired"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.disable"
            ]
          }
        ]
      }
    },
    "/v1/payment_links/{id}/details": {
      "get": {
        "operationId": "PaymentLinksController_getDetails",
        "summary": "Detalhes das faturas do link de pagamento",
        "description": "Exibe detalhes das faturas do link de pagamento.",
        "parameters": [
          {
            "name": "id",
            "description": "Identificador único do link de pagamento",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countInvoices": {
                      "type": "number"
                    },
                    "paid": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    },
                    "waitingPayment": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number"
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Link de pagamento inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Links de Pagamento"
        ],
        "security": [
          {
            "lytexAuth": [
              "paymentLink.get"
            ]
          }
        ]
      }
    },
    "/v1/products": {
      "post": {
        "operationId": "ProductsController_createProduct",
        "summary": "Criar produto",
        "description": "Adiciona um novo produto ao catálogo.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "nome do produto",
                    "type": "string",
                    "maxLength": 40
                  },
                  "value": {
                    "type": "integer",
                    "description": "valor do produto",
                    "minimum": 200,
                    "maximum": 1500000
                  }
                },
                "required": [
                  "name",
                  "value"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "required": [
                    "value",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Produto já cadastrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Produto já cadastrado"
                    },
                    "error": {
                      "type": "string",
                      "example": "Conflict"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.create"
            ]
          }
        ]
      },
      "get": {
        "operationId": "ProductsController_listProducts",
        "summary": "Listar produtos",
        "description": "Lista os produtos cadastrados no catálogo.",
        "parameters": [
          {
            "name": "x-cloud-trace-context",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "description": "nome a ser pesquisado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "description": "data inicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "description": "data final",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "description": "página atual",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "perPage",
            "description": "Quantidade de resultado por página",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "sortField",
            "description": "campo de classificação",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "description": "ordem de classificação",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.get"
            ]
          }
        ]
      }
    },
    "/v1/products/import": {
      "post": {
        "operationId": "ProductsController_importProducts",
        "summary": "Importar produtos",
        "description": "Recebe um csv e importa para base de produtos, [modelo .csv](https://storage.googleapis.com/lypag-static/modelo-importacao-produtos.csv)<br/>\n    Esta requisição poderá ser movida para segundo plano caso os servidores estejam sob alta demanda, uma resposta 202 será enviada caso a requisição seja movida para segundo plano e uma notificação será enviada ao finalizar a importação.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "arquivo com produtos para importar",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "clientId",
                      "subscriptionId"
                    ],
                    "properties": {
                      "productId": {
                        "type": "string",
                        "example": "6101ac11f99c2556e2877e4f"
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Processando",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "import_started"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Arquivo inválido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Arquivo inválido",
                        "Erro ao processar a linha: 1"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.import"
            ]
          }
        ]
      }
    },
    "/v1/products/autocomplete": {
      "get": {
        "operationId": "ProductsController_autocompleteProducts",
        "summary": "Autocomplete produtos",
        "description": "Retorna dados do produtos com base em uma pesquisa.",
        "parameters": [
          {
            "name": "search",
            "description": "nome do produto",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.get"
            ]
          }
        ]
      }
    },
    "/v1/products/{id}": {
      "get": {
        "operationId": "ProductsController_getProduct",
        "summary": "Detalhes do produto",
        "description": "Exiba detalhes do produto cadastrado no catálogo.",
        "parameters": [
          {
            "name": "id",
            "description": "Identificar único do produto",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "required": [
                    "value",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Produto inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.get"
            ]
          }
        ]
      },
      "put": {
        "operationId": "ProductsController_updateProduct",
        "summary": "Atualiza produto",
        "description": "Atualiza dados de um produto cadastrado no catálogo.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "nome do produto",
                    "type": "string",
                    "maxLength": 255
                  },
                  "value": {
                    "type": "integer",
                    "description": "valor do produto",
                    "minimum": 200,
                    "maximum": 1500000
                  }
                },
                "required": [
                  "name",
                  "value"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Identificar único do produto",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "required": [
                    "value",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Produto inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Produto já cadastrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Produto já cadastrado"
                    },
                    "error": {
                      "type": "string",
                      "example": "Conflict"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.update"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "ProductsController_deleteProduct",
        "summary": "Remove produto",
        "description": "Remove um produto",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Product",
                  "required": [
                    "value",
                    "name",
                    "_recipientId"
                  ],
                  "properties": {
                    "value": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Produto inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Produtos"
        ],
        "security": [
          {
            "lytexAuth": [
              "product.delete"
            ]
          }
        ]
      }
    },
    "/v1/wallet": {
      "get": {
        "operationId": "WalletController_getWalletInfo",
        "summary": "Detalhes da carteira",
        "description": "Retorna os dados da carteira do beneficiário.",
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "number"
                    },
                    "futureBalance": {
                      "type": "number"
                    },
                    "minimumWithdrawal": {
                      "type": "number"
                    },
                    "currentTax": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Carteira"
        ],
        "security": [
          {
            "lytexAuth": [
              "wallet.get"
            ]
          }
        ]
      }
    },
    "/v1/wallet/withdraw": {
      "post": {
        "operationId": "WalletController_createWithdrawSolicitation",
        "summary": "Criar solicitação de saque",
        "description": "Cria uma nova solicitação de saque do beneficiário",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "_bankAccountId": {
                    "type": "string"
                  }
                },
                "required": [
                  "amount",
                  "_bankAccountId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "title": "WithdrawSolicitation",
                  "required": [
                    "comment",
                    "status",
                    "taxes",
                    "amount",
                    "bankAccount",
                    "_recipientId"
                  ],
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "waiting_approval",
                        "approved",
                        "rejected",
                        "reproved",
                        "released"
                      ]
                    },
                    "taxes": {
                      "type": "number"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "bankAccount": {
                      "type": "object",
                      "properties": {
                        "account": {
                          "type": "object",
                          "properties": {
                            "operation": {
                              "type": "string"
                            },
                            "dv": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "poupanca",
                                "corrente",
                                "poupancaConjunta",
                                "correnteConjunta"
                              ]
                            }
                          }
                        },
                        "agency": {
                          "type": "object",
                          "properties": {
                            "dv": {
                              "type": "string"
                            },
                            "number": {
                              "type": "string"
                            }
                          }
                        },
                        "bank": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "code": {
                              "type": "string"
                            }
                          }
                        },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "cpfCnpj": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "pf",
                                "pj"
                              ]
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "_recipientId": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Carteira"
        ],
        "security": [
          {
            "lytexAuth": [
              "wallet.createWithdraw"
            ]
          }
        ]
      }
    },
    "/v1/wallet/transactions": {
      "get": {
        "operationId": "WalletController_listWalletTransactions",
        "summary": "Detalhes das transações da carteira",
        "description": "Retorna os dados das transações da carteira do beneficiário.",
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "paginate": {
                      "type": "object",
                      "properties": {
                        "perPage": {
                          "type": "number",
                          "minimum": 1
                        },
                        "page": {
                          "type": "number",
                          "minimum": 1
                        },
                        "pages": {
                          "type": "number",
                          "minimum": 1
                        },
                        "total": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Carteira"
        ],
        "security": [
          {
            "lytexAuth": [
              "wallet.get"
            ]
          }
        ]
      }
    },
    "/v1/wallet/transactions/resume": {
      "get": {
        "operationId": "WalletController_getWalletTransactionsResume",
        "summary": "Resumo das transações da carteira",
        "description": "Retorna os dados do resumo da carteira do beneficiário.",
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "in": {
                      "type": "number"
                    },
                    "out": {
                      "type": "number"
                    },
                    "taxes": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Credenciais inválidas",
                        "Token inválido"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token revogado",
                        "Você não tem permissão neste beneficiário",
                        "Seu usuário foi desabilitado",
                        "Beneficiário desabilitado",
                        "Beneficiário bloqueado, entre em contato para mais informações",
                        "Seu usuário não foi ativado"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 410
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Token expirado",
                        "Sua senha expirou, por favor troque-a"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "example": "Gone"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Requisicão inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Requisição inválida"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "_original": {
                          "description": "Objeto contendo a requisicão original",
                          "type": "object",
                          "example": {}
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "description": "Mensagem de erro no campo especificado",
                                "example": "\"name\" é obrigatório"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Campo em que ocorreu o erro",
                                  "example": "name"
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "Tipo do erro ocorrido",
                                "example": "any.required"
                              },
                              "context": {
                                "type": "object",
                                "description": "Detalhes do campo",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "name"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "name"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "body",
                          "description": "Origem do objeto da requisicão"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Carteira"
        ],
        "security": [
          {
            "lytexAuth": [
              "wallet.get"
            ]
          }
        ]
      }
    }
  },
  "info": {
    "title": "Lytex Pagamentos API",
    "description": "\nA LyTex Pagamentos é uma Fintech com foco na potencialização de resultados em empresas, atuando com meios de pagamentos digitais. Somos reconhecidos pela excelência na entrega de soluções específicas para aceleração de crescimento por meio da tecnologia e inovação estratégica. Tornamos a gestão financeira da sua empresa mais eficiente com nossas soluções. Automatizamos seus processos de recebimentos únicos ou recorrentes, aumentando a produtividade do seu negócio. Temos a certificação internacional PCI-DSS de segurança, garantindo mais confiança e eficiência nas suas transações.\n\nOferecemos aos desenvolvedores uma API simples e poderosa para integrar pagamentos por boleto e PIX em seu site ou aplicação. Antes de prosseguir, é necessário criar uma conta em nosso sistema.\n\n <div class=\"container-cta-api\">\n \n  <a class=\"botton-create-account\" href=\"/introducao-ao-sistema#section/Cadastro\">\n    Não tem conta ?\n  <a/>\n    \n  <a class=\"botton-open-account\" href=\"/introducao-ao-sistema#section/Cadastro\">\n    Abrir conta agora\n  <a/>\n  \n  </div>\n  \n# Criar primeira cobrança\n\nPara gerar as chaves que possibilitam a integração com nosso método de pagamento, primeiramente, você precisa fazer login no painel. Em seguida, no menu lateral à esquerda, clique em **Configurações** e depois em **Integrações** e **API**. \n\nPreencha os campos com o nome e descrição de sua integração e clique em **Salvar**. Em seguida, vão ser carregadas as chaves de sua integração. Agora, precisamos configurar as permissões desta integração. Para isso, clique em **Restringir Acesso** e marque a caixinha **Faturas**. Agora, é só salvar e pronto! Está configurada a sua integração na plataforma. No próximo passo vamos criar sua primeira fatura.\n\n\n  <video width=\"100%\" height=\"100%\" autoplay=\"\" loop=\"\">\n    <source src=\"https://homologacao-site.lytex.com.br/videos/criando-integracao.mov\" type=\"video/mp4\">\n  </video>\n  \n  \n  \n  \n  \n  \n## Criando token de acesso\n\nCom a integração criada e configurada dentro do painel da LyTex, agora nós vamos utilizar o **Postman** para gerar o token de acesso e também a primeira fatura. Primeiramente, é necessário montar o arquivo **JSON**. Você pode copiar e colar o código abaixo no seu Postman. Após colocar seus dados da integração, basta executá-la e você receberá uma resposta de nossa API com um parâmetro chamado **AccessToken**. O mesmo tem durabilidade de 5 minutos, também receberemos como parâmetros algumas informações referente a esse token.\n\nPara gerar esse token, utilizarmos a rota **/v1/oauth/obtain_token**\n\nFeito isso, e com o **AccessToken** salvo, podemos passar para o próximo passo: a geração de faturas.\n\n      JSON\n      {\n          \"grantType\": \"clientCredentials\",\n          \"clientId\": \"SEU Client ID\",\n          \"clientSecret\":\"SEU CLIENT SECRET\",\n          \"scopes\": [\n              \"invoice\"\n          ]\n      }\n      \n  <video width=\"100%\" height=\"100%\" loop=\"\" controls=\"\">\n    <source src=\"https://homologacao-site.lytex.com.br/videos/criando-token-de-acesso.mov\" type=\"video/mp4\">\n  </video>\n  \n  \n## Criando a cobrança\n\nAgora sim, vamos criar a nossa fatura! Primeiro, vamos começar a montar o arquivo JSON, onde constam várias informações como os dados do cliente, dados do produto e endereço. Nesta demonstração, usaremos somente os dados obrigatórios para que a fatura seja criada.\n\nPara gerar a fatura utilizarmos a rota **/v1/invoices**\n\nNesta requisição, vamos passar o parâmetro **Authorization** no header com o valor do token de acesso gerado anteriormente. Usando o modo Sandbox, existem alguns usuários fictícios que você deve utilizar, pois outros dados não serão reconhecidos pela API.\n\n\nUsando o modo sandbox existes alguns usuários fictícios para ser usados, outros dados não será reconhecido pela API\n\n  ### Dados usuários fictícios\n  <table>\n  <tbody>\n  <tr>\n      <td>Valerio de Aguiar Zorzato</td>\n      <td>96050176876</td>\n  </tr>\n      <tr>\n      <td>Joao da Costa Antunes  </td>\n      <td>88398158808</td>\n  </tr>\n      <tr>\n      <td>Valerio Alves Barros</td>\n      <td>71943984190</td>\n  </tr>\n      <tr>\n      <td>Joao da Costa Antunes</td>\n      <td>97965940132</td>\n  </tr>\n\n</tbody></table>\n\n\n    {\n        \"client\": {\n            \"treatmentPronoun\": \"you\",\n            \"name\": \"Valerio de Aguiar Zorzato\",\n            \"type\": \"pf\",\n            \"cpfCnpj\": \"96050176876\",\n            \"email\": \"valerio@gmail.com\",\n            \"cellphone\": \"78798798798\",\n            \"address\": {\n    \n                \"zip\": \"35170128\",\n                \"city\": \"Coronel Fabriciano\",\n                \"street\": \"Rua Doutor Moacir Byrro\",\n                \"state\": \"MG\",\n                \"zone\": \"Centro\"\n            }\n          },\n        \"items\": [\n            {\n                \"name\": \"Notebook A315-58-573p I5 8gb 256gb Ssd 15,6\",\n                \"quantity\": 1,\n                \"value\": 279900\n            }\n    \n        ],\n        \"dueDate\": \"2023-12-30T23:59:59.999Z\",\n        \"paymentMethods\": {\n            \"pix\": {\n                \"enable\": true\n            },\n            \"boleto\": {\n                \"enable\": true\n            },\n            \"creditCard\": {\n                \"enable\": false\n            }\n        },\n        \"notifications\":{\n            \"enable\": false,\n            \"channels\":{\n                \"sms\":false,\n                \"email\":true,\n                \"whatsApp\":false\n            },\n            \"types\":{\n                \"daysBeforeExpiration3\":true,\n                \"expirationDay\":true,\n                \"invoiceCreate\":true,\n                \"invoicePaid\":true\n            }\n        },\n        \"cancelOverdue\": false\n    }\n\n<video width=\"100%\" height=\"100%\" loop=\"\" controls=\"\">\n  <source src=\"https://homologacao-site.lytex.com.br/videos/criar-fatura.mov\" type=\"video/mp4\">\n</video>",
    "version": "2.0.0",
    "contact": {
      "name": "Lytex",
      "url": "https://lytex.com.br",
      "email": "suporte@lytex.com.br"
    }
  },
  "servers": [
    {
      "url": "https://api-pay.lytex.com.br",
      "description": "Produção"
    },
    {
      "url": "https://sandbox-api-pay.lytex.com.br",
      "description": "Sandbox"
    }
  ],
  "components": {
    "securitySchemes": {
      "lytexAuth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth-pay.lytex.com.br/v1/oauth/obtain_token",
            "refreshUrl": "https://auth-pay.lytex.com.br/v1/oauth/obtain_token",
            "scopes": {
              "invoice": "invoice",
              "invoice_create": "invoice.create",
              "invoice_get": "invoice.get",
              "invoice_update": "invoice.update",
              "invoice_cancel": "invoice.cancel",
              "invoice_refund": "invoice.refund",
              "installment": "installment",
              "billingRule": "billingRule",
              "billingRule_create": "billingRule.create",
              "billingRule_get": "billingRule.get",
              "billingRule_update": "billingRule.update",
              "billingRule_delete": "billingRule.delete",
              "installment_create": "installment.create",
              "installment_get": "installment.get",
              "installment_update": "installment.update",
              "installment_cancel": "installment.cancel",
              "client": "client",
              "client_create": "client.create",
              "client_get": "client.get",
              "client_update": "client.update",
              "client_delete": "client.delete",
              "client_import": "client.import",
              "subscription": "subscription",
              "subscription_get": "subscription.get",
              "subscription_create": "subscription.create",
              "subscription_update": "subscription.update",
              "subscription_cancel": "subscription.cancel",
              "receivable": "receivable",
              "receivable_get": "receivable.get",
              "paymentLink": "paymentLink",
              "paymentLink_create": "paymentLink.create",
              "paymentLink_get": "paymentLink.get",
              "paymentLink_update": "paymentLink.update",
              "paymentLink_activate": "paymentLink.activate",
              "paymentLink_disable": "paymentLink.disable",
              "product": "product",
              "product_get": "product.get",
              "product_create": "product.create",
              "product_import": "product.import",
              "product_update": "product.update",
              "product_delete": "product.delete",
              "wallet": "wallet",
              "wallet_get": "wallet.get",
              "wallet_createWithdraw": "wallet.createWithdraw"
            }
          }
        }
      }
    },
    "schemas": {}
  }
}
